app:
  description: ResearchFlow is an advanced tool designed to assist researchers, academics,
    and students by automating the extraction, processing, and visualization of information
    from research papers. This application leverages cutting-edge technology to transform
    unstructured data into a structured knowledge graph, enabling users to easily
    navigate and gain insights from complex academic content.
  icon: 🤖
  icon_background: '#FFEAD5'
  mode: workflow
  name: ResearchFlow UI
  use_icon_as_answer_icon: false
dependencies:
- current_identifier: null
  type: package
  value:
    plugin_unique_identifier: jerry_aa/neo4j:0.0.3@d5bddcc2b5a0d618eb8a743f64096b18336e14cb9f236225977513b23f17fd9d
- current_identifier: null
  type: marketplace
  value:
    marketplace_plugin_unique_identifier: langgenius/ollama:0.0.3@9ded90ac00e8510119a24be7396ba77191c9610d5e1e29f59d68fa1229822fc7
- current_identifier: null
  type: package
  value:
    plugin_unique_identifier: jerry_aa/open_alex:0.0.1@f99ce0d477e8a52a303fbe20d395a1664f988204a204c9486c1984c8ec78082f
kind: app
version: 0.1.5
workflow:
  conversation_variables: []
  environment_variables: []
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        isInIteration: false
        sourceType: llm
        targetType: parameter-extractor
      id: 1740489507030-source-1740490731755-target
      selected: false
      source: '1740489507030'
      sourceHandle: source
      target: '1740490731755'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: parameter-extractor
        targetType: end
      id: 1740490731755-source-1740489835810-target
      selected: false
      source: '1740490731755'
      sourceHandle: source
      target: '1740489835810'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: start
        targetType: if-else
      id: 1740085577359-source-1740496033015-target
      selected: false
      source: '1740085577359'
      sourceHandle: source
      target: '1740496033015'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: llm
      id: 1740496033015-true-1740489507030-target
      selected: false
      source: '1740496033015'
      sourceHandle: 'true'
      target: '1740489507030'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: if-else
        targetType: document-extractor
      id: 1740496033015-12b7f52a-7c53-4542-b8ea-54f6aff277e3-1740492212653-target
      selected: false
      source: '1740496033015'
      sourceHandle: 12b7f52a-7c53-4542-b8ea-54f6aff277e3
      target: '1740492212653'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: document-extractor
        targetType: code
      id: 1740492212653-source-1740498018041-target
      selected: false
      source: '1740492212653'
      sourceHandle: source
      target: '1740498018041'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1740526532426'
        sourceType: iteration-start
        targetType: parameter-extractor
      id: 1740526532426start-source-1740526583162-target
      selected: false
      source: 1740526532426start
      sourceHandle: source
      target: '1740526583162'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: false
        sourceType: template-transform
        targetType: llm
      id: 1741383867672-source-1741383915003-target
      selected: false
      source: '1741383867672'
      sourceHandle: source
      target: '1741383915003'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: end
      id: 1741385105846-source-1740941888623-target
      selected: false
      source: '1741385105846'
      sourceHandle: source
      target: '1740941888623'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: template-transform
      id: 1740489507030-fail-branch-1741501072942-target
      selected: false
      source: '1740489507030'
      sourceHandle: fail-branch
      target: '1741501072942'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: template-transform
        targetType: end
      id: 1741501072942-source-1740489933347-target
      selected: false
      source: '1741501072942'
      sourceHandle: source
      target: '1740489933347'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: parameter-extractor
        targetType: llm
      id: 1740502452418-source-1741375583243-target
      selected: false
      source: '1740502452418'
      sourceHandle: source
      target: '1741375583243'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        iteration_id: '1740526532426'
        sourceType: parameter-extractor
        targetType: tool
      id: 1740526583162-source-1741679779860-target
      selected: false
      source: '1740526583162'
      sourceHandle: source
      target: '1741679779860'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInLoop: false
        sourceType: llm
        targetType: parameter-extractor
      id: 1740502396057-source-1740502452418-target
      selected: false
      source: '1740502396057'
      sourceHandle: source
      target: '1740502452418'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: parameter-extractor
      id: 1740502396057-source-1740502457661-target
      selected: false
      source: '1740502396057'
      sourceHandle: source
      target: '1740502457661'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: tool
      id: 1741375583243-source-1741701423063-target
      selected: false
      source: '1741375583243'
      sourceHandle: source
      target: '1741701423063'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        isInLoop: false
        iteration_id: '17417048370100'
        sourceType: iteration-start
        targetType: template-transform
      id: 1741704837010start-source-1741705128137-target
      selected: false
      source: 1741704837010start
      sourceHandle: source
      target: '1741705128137'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        isInLoop: false
        iteration_id: '17417048370100'
        sourceType: template-transform
        targetType: tool
      id: 1741705128137-source-1741704837010017417048370110-target
      selected: false
      source: '1741705128137'
      sourceHandle: source
      target: '1741704837010017417048370110'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        isInLoop: false
        iteration_id: '1741704809609'
        sourceType: iteration-start
        targetType: template-transform
      id: 1741704809609start-source-1741705245901-target
      selected: false
      source: 1741704809609start
      sourceHandle: source
      target: '1741705245901'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        isInLoop: false
        iteration_id: '1741704809609'
        sourceType: template-transform
        targetType: tool
      id: 1741705245901-source-1741704822247-target
      selected: false
      source: '1741705245901'
      sourceHandle: source
      target: '1741704822247'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        isInLoop: false
        iteration_id: '17417048593430'
        sourceType: iteration-start
        targetType: tool
      id: 1741704859343start-source-1741706318301-target
      selected: false
      source: 1741704859343start
      sourceHandle: source
      target: '1741706318301'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        isInLoop: false
        iteration_id: '17417048593430'
        sourceType: tool
        targetType: code
      id: 1741706318301-source-1741706250539-target
      selected: false
      source: '1741706318301'
      sourceHandle: source
      target: '1741706250539'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInIteration: true
        isInLoop: false
        iteration_id: '17417048593430'
        sourceType: code
        targetType: tool
      id: 1741706250539-source-1741704859343017417048593430-target
      selected: false
      source: '1741706250539'
      sourceHandle: source
      target: '1741704859343017417048593430'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInLoop: false
        sourceType: tool
        targetType: tool
      id: 1741703889325-source-1741379043049-target
      selected: false
      source: '1741703889325'
      sourceHandle: source
      target: '1741379043049'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: iteration
        targetType: tool
      id: 1741704809609-source-1741379043049-target
      selected: false
      source: '1741704809609'
      sourceHandle: source
      target: '1741379043049'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: iteration
        targetType: tool
      id: 17417048370100-source-1741379043049-target
      selected: false
      source: '17417048370100'
      sourceHandle: source
      target: '1741379043049'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: iteration
        targetType: tool
      id: 17417048593430-source-1741379043049-target
      selected: false
      source: '17417048593430'
      sourceHandle: source
      target: '1741379043049'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: tool
      id: 1741379043049-source-17413860651250-target
      selected: false
      source: '1741379043049'
      sourceHandle: source
      target: '17413860651250'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: tool
      id: 1741379043049-source-17413860683430-target
      selected: false
      source: '1741379043049'
      sourceHandle: source
      target: '17413860683430'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: tool
      id: 1741379043049-source-17414156283300-target
      selected: false
      source: '1741379043049'
      sourceHandle: source
      target: '17414156283300'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: tool
      id: 1741379043049-source-1741387098033-target
      selected: false
      source: '1741379043049'
      sourceHandle: source
      target: '1741387098033'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 17413860651250-source-1741386545732-target
      selected: false
      source: '17413860651250'
      sourceHandle: source
      target: '1741386545732'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 17413860683430-source-1741386545732-target
      selected: false
      source: '17413860683430'
      sourceHandle: source
      target: '1741386545732'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 17414156283300-source-1741386545732-target
      selected: false
      source: '17414156283300'
      sourceHandle: source
      target: '1741386545732'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: template-transform
        targetType: llm
      id: 1741386545732-source-1741385105846-target
      selected: false
      source: '1741386545732'
      sourceHandle: source
      target: '1741385105846'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: tool
      id: 1741379043049-source-17417114843540-target
      selected: false
      source: '1741379043049'
      sourceHandle: source
      target: '17417114843540'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 17417114843540-source-1741386545732-target
      selected: false
      source: '17417114843540'
      sourceHandle: source
      target: '1741386545732'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: tool
      id: 1741379043049-source-1741709809655-target
      selected: false
      source: '1741379043049'
      sourceHandle: source
      target: '1741709809655'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 1741709809655-source-1741386545732-target
      selected: false
      source: '1741709809655'
      sourceHandle: source
      target: '1741386545732'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        isInLoop: false
        iteration_id: '1740526532426'
        sourceType: tool
        targetType: code
      id: 1741679779860-source-1741682372317-target
      selected: false
      source: '1741679779860'
      sourceHandle: source
      target: '1741682372317'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInLoop: false
        sourceType: tool
        targetType: code
      id: 1741701423063-source-17417182251300-target
      selected: false
      source: '1741701423063'
      sourceHandle: source
      target: '17417182251300'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: parameter-extractor
        targetType: code
      id: 1740502457661-source-17417182251300-target
      selected: false
      source: '1740502457661'
      sourceHandle: source
      target: '17417182251300'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: llm
      id: 1740498018041-source-1740502396057-target
      selected: false
      source: '1740498018041'
      sourceHandle: source
      target: '1740502396057'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: code
        targetType: iteration
      id: 17417182251300-source-1740526532426-target
      selected: false
      source: '17417182251300'
      sourceHandle: source
      target: '1740526532426'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: iteration
        targetType: tool
      id: 1740526532426-source-1741703889325-target
      selected: false
      source: '1740526532426'
      sourceHandle: source
      target: '1741703889325'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: iteration
        targetType: iteration
      id: 1740526532426-source-1741704809609-target
      selected: false
      source: '1740526532426'
      sourceHandle: source
      target: '1741704809609'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: iteration
        targetType: iteration
      id: 1740526532426-source-17417048370100-target
      selected: false
      source: '1740526532426'
      sourceHandle: source
      target: '17417048370100'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: iteration
        targetType: iteration
      id: 1740526532426-source-17417048593430-target
      selected: false
      source: '1740526532426'
      sourceHandle: source
      target: '17417048593430'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: true
        isInLoop: false
        iteration_id: '1740526532426'
        sourceType: code
        targetType: tool
      id: 1741682372317-source-1741720538127-target
      selected: false
      source: '1741682372317'
      sourceHandle: source
      target: '1741720538127'
      targetHandle: target
      type: custom
      zIndex: 1002
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 1741387098033-source-1741386545732-target
      selected: false
      source: '1741387098033'
      sourceHandle: source
      target: '1741386545732'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: llm
        targetType: template-transform
      id: 1741383915003-source-1741781467526-target
      selected: false
      source: '1741383915003'
      sourceHandle: source
      target: '1741781467526'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: template-transform
        targetType: end
      id: 1741781467526-source-1740496835637-target
      selected: false
      source: '1741781467526'
      sourceHandle: source
      target: '1740496835637'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: if-else
        targetType: template-transform
      id: 1740496033015-false-1741781417014-target
      selected: false
      source: '1740496033015'
      sourceHandle: 'false'
      target: '1741781417014'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        isInLoop: false
        sourceType: template-transform
        targetType: llm
      id: 1741781417014-source-1741782292071-target
      selected: false
      source: '1741781417014'
      sourceHandle: source
      target: '1741782292071'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: parameter-extractor
      id: 1741383675749-fail-branch-17417834616980-target
      selected: false
      source: '1741383675749'
      sourceHandle: fail-branch
      target: '17417834616980'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 17417834743570-source-1741383867672-target
      selected: false
      source: '17417834743570'
      sourceHandle: source
      target: '1741383867672'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: parameter-extractor
        targetType: tool
      id: 17417834616980-source-17417834743570-target
      selected: false
      source: '17417834616980'
      sourceHandle: source
      target: '17417834743570'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: llm
        targetType: tool
      id: 1741782292071-source-1741383675749-target
      selected: false
      source: '1741782292071'
      sourceHandle: source
      target: '1741383675749'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInLoop: false
        sourceType: tool
        targetType: template-transform
      id: 1741383675749-source-1741383867672-target
      selected: false
      source: '1741383675749'
      sourceHandle: source
      target: '1741383867672'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: Entry Block
        type: start
        variables:
        - label: new_chat
          max_length: 6
          options: []
          required: false
          type: text-input
          variable: new_chat
        - allowed_file_extensions: []
          allowed_file_types:
          - image
          allowed_file_upload_methods:
          - local_file
          - remote_url
          label: ChatHistory
          max_length: 7000
          options: []
          required: false
          type: paragraph
          variable: ChatHistory
        - allowed_file_extensions: []
          allowed_file_types:
          - document
          allowed_file_upload_methods:
          - local_file
          - remote_url
          label: ResearchPaper
          max_length: 5
          options: []
          required: false
          type: file
          variable: ResearchPaper
        - label: Query
          max_length: 2000
          options: []
          required: false
          type: paragraph
          variable: Query
      height: 168
      id: '1740085577359'
      position:
        x: 30
        y: 336
      positionAbsolute:
        x: 30
        y: 336
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        author: jerryakporDify
        desc: ''
        height: 783
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":1,"mode":"normal","style":"","text":"[Entry
          Block] Start Node","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":1,"textStyle":""},{"children":[],"direction":null,"format":"","indent":0,"type":"paragraph","version":1,"textFormat":1,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"The
          ","type":"text","version":1},{"detail":0,"format":1,"mode":"normal","style":"","text":"Entry
          Block","type":"text","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":"
          serves as the initial interaction point for the ResearchFlow system, allowing
          inputs from both the ","type":"text","version":1},{"detail":0,"format":1,"mode":"normal","style":"","text":"DIFY
          workflow","type":"text","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":"
          and the ","type":"text","version":1},{"detail":0,"format":1,"mode":"normal","style":"","text":"Streamlit
          User Interface","type":"text","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":".
          The key inputs include:","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"children":[{"detail":0,"format":1,"mode":"normal","style":"","text":"new_chat","type":"text","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":":
          A boolean flag that determines whether a new chat session requires a title
          generation.","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"listitem","version":1,"value":1},{"children":[{"detail":0,"format":1,"mode":"normal","style":"","text":"ChatHistory","type":"text","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":":
          Stores the history of user interactions to maintain conversational context.","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"listitem","version":1,"value":2},{"children":[{"detail":0,"format":1,"mode":"normal","style":"","text":"ResearchPaper","type":"text","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":":
          The primary input for users to upload a PDF research paper, enabling structured
          data extraction.","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"listitem","version":1,"value":3},{"children":[{"detail":0,"format":1,"mode":"normal","style":"","text":"Query","type":"text","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":":
          Allows users to query send a query to the llm which then generates a Cypher
          query for the Neo4j knowledge graph then llm generates a response based
          on the result of the query.","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"listitem","version":1,"value":4}],"direction":"ltr","format":"","indent":0,"type":"list","version":1,"listType":"bullet","start":1,"tag":"ul"},{"children":[],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ''
        type: ''
        width: 630
      height: 783
      id: '1740133310581'
      position:
        x: -295.87050061824266
        y: -94.86746978746936
      positionAbsolute:
        x: -295.87050061824266
        y: -94.86746978746936
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 630
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        error_strategy: fail-branch
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: llama3.2:latest
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: f6c5aa3e-8f41-49eb-972b-e6a1ab73548e
          role: system
          text: 'You are ChatTitleMaster, a creative and insightful AI assistant.
            Your task is to generate a compelling, concise title for a new chat session
            based on the user''s intent. Make it engaging, relevant, and reflective
            of the topic they wish to discuss. Keep it short and impactful, as if
            naming an exciting adventure or an intriguing story.

            <example>

            Input: "I want to plan a surprise birthday party for my friend."

            Output: title: Birthday Surprise Party

            </example>

            Don''t explain anything just return the tile of chat.'
        - id: 7eb878f5-e6cc-47b2-ae40-bd650f4f60d4
          role: user
          text: 'Can you now generate a title for this usere input:

            {{#1740085577359.Query#}}'
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 1000
        selected: false
        title: Titile Generator
        type: llm
        variables: []
        vision:
          enabled: false
      height: 152
      id: '1740489507030'
      position:
        x: 747.315624093491
        y: -624.5349677333921
      positionAbsolute:
        x: 747.315624093491
        y: -624.5349677333921
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1740490731755'
          - Title
          variable: new_chat_title
        selected: false
        title: End
        type: end
      height: 90
      id: '1740489835810'
      position:
        x: 1358.2713225411667
        y: -598.9169387124969
      positionAbsolute:
        x: 1358.2713225411667
        y: -598.9169387124969
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1741501072942'
          - output
          variable: new_chat_title
        selected: false
        title: End 2
        type: end
      height: 90
      id: '1740489933347'
      position:
        x: 1369.8277184030742
        y: -459.2301875892244
      positionAbsolute:
        x: 1369.8277184030742
        y: -459.2301875892244
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        instruction: can you extract the title from the provided text
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: llama3.2:latest
          provider: langgenius/ollama/ollama
        parameters:
        - description: Title of a new chat
          name: Title
          required: true
          type: string
        query:
        - '1740489507030'
        - text
        reasoning_mode: prompt
        selected: false
        title: Extract The Title
        type: parameter-extractor
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1740490731755'
      position:
        x: 1048.7439113396906
        y: -609.4053206060205
      positionAbsolute:
        x: 1048.7439113396906
        y: -609.4053206060205
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        author: jerryakporDify
        desc: ''
        height: 482
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":3,"mode":"normal","style":"font-size:
          16px;","text":"Title Generator","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":3,"textStyle":"font-size:
          16px;"},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"The
          Title Generator Block is used by the ResearchFlow UI to generate titles
          for chat sessions. It is triggered based on the new\\_chat boolean flag,
          which determines whether a ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"title
          should be generated. When activated, the block processes the conversation
          history and uploaded research paper metadata to create a concise, meaningful
          title. ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"If
          no prior chat history exists, it generates a generic title relevant to the
          user input, ensuring clear identification and organization of discussions
          in the UI.","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: yellow
        title: ''
        type: ''
        width: 1125
      height: 482
      id: '1740491586426'
      position:
        x: 727.6230452988873
        y: -822.2923097614707
      positionAbsolute:
        x: 727.6230452988873
        y: -822.2923097614707
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 1125
    - data:
        author: jerryakporDify
        desc: ''
        height: 322
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":3,"mode":"normal","style":"font-size:
          16px;","text":"Paper Summarizer","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":3,"textStyle":"font-size:
          16px;"},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"The
          Paper Summarizer Block takes the ","type":"text","version":1},{"detail":0,"format":1,"mode":"normal","style":"","text":"main
          body chunk","type":"text","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":"
          from the Information Miner Block and processes it using the ","type":"text","version":1},{"detail":0,"format":1,"mode":"normal","style":"","text":"LLM","type":"text","version":1},{"detail":0,"format":0,"mode":"normal","style":"","text":"
          to generate a concise summary. By focusing on the key sections of the paper,
          this block ensures that the summarized content retains the core findings
          and essential details of the research. The summarization process enables
          users to quickly grasp the main contributions of a paper without needing
          to read through the entire document, enhancing the efficiency of the research
          workflow.","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ''
        type: ''
        width: 481
      height: 322
      id: '1740492182144'
      position:
        x: 2566.8529678995214
        y: 301.7443105852888
      positionAbsolute:
        x: 2566.8529678995214
        y: 301.7443105852888
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 481
    - data:
        desc: ''
        is_array_file: false
        selected: false
        title: Doc Extractor
        type: document-extractor
        variable_selector:
        - '1740085577359'
        - ResearchPaper
      height: 92
      id: '1740492212653'
      position:
        x: 1653.850860416855
        y: 853.7570059370732
      positionAbsolute:
        x: 1653.850860416855
        y: 853.7570059370732
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        cases:
        - case_id: 'true'
          conditions:
          - comparison_operator: contains
            id: 40050bb9-1d65-4ee8-99d8-9d6c78d5ca24
            value: 'true'
            varType: string
            variable_selector:
            - '1740085577359'
            - new_chat
          - comparison_operator: contains
            id: 7780df50-914a-4617-aaa2-64de7f1377d3
            value: 'True'
            varType: string
            variable_selector:
            - '1740085577359'
            - new_chat
          id: 'true'
          logical_operator: or
        - case_id: 12b7f52a-7c53-4542-b8ea-54f6aff277e3
          conditions:
          - comparison_operator: exists
            id: 7be91a47-1c00-4aae-8cec-38bcf90c2ce6
            value: ''
            varType: file
            variable_selector:
            - '1740085577359'
            - ResearchPaper
          id: 12b7f52a-7c53-4542-b8ea-54f6aff277e3
          logical_operator: and
        desc: ''
        selected: false
        title: IF/ELSE 2
        type: if-else
      height: 200
      id: '1740496033015'
      position:
        x: 407.08203515776313
        y: 704
      positionAbsolute:
        x: 407.08203515776313
        y: 704
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1741781467526'
          - output
          variable: response
        selected: false
        title: End 4
        type: end
      height: 90
      id: '1740496835637'
      position:
        x: 2555.611250023097
        y: 2352.415078986069
      positionAbsolute:
        x: 2555.611250023097
        y: 2352.415078986069
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import re\n\ndef chunk_text(text: str, chunk_size: int = 1000, overlap:\
          \ int = 200) -> list:\n    \"\"\"\n    Splits the extracted text into chunks\
          \ of a specified size with optional overlap.\n\n    Args:\n        text\
          \ (str): The text extracted from the PDF.\n        chunk_size (int): The\
          \ maximum number of characters in each chunk.\n        overlap (int): The\
          \ number of characters to overlap between chunks.\n\n    Returns:\n    \
          \    list: A list of text chunks.\n    \"\"\"\n    text = re.sub(r'\\n+',\
          \ '\\n', text).strip()  # Normalize newlines\n    words = text.split() \
          \ # Split text into words\n    chunks = []\n    \n    start = 0\n    while\
          \ start < len(words):\n        end = start + chunk_size\n        chunk =\
          \ ' '.join(words[start:end])\n        chunks.append(chunk)\n        start\
          \ += chunk_size - overlap  # Move start forward with overlap\n\n    return\
          \ chunks\n\ndef extract_main_body(text: str) -> str:\n    \"\"\"\n    Extracts\
          \ the main body of the research paper by identifying the introduction,\n\
          \    abstract, and stopping before references.\n\n    Args:\n        text\
          \ (str): The full text of the paper.\n\n    Returns:\n        str: The extracted\
          \ main body section.\n    \"\"\"\n    # Identify Abstract\n    abstract_match\
          \ = re.search(r'\\b(?:Abstract|Summary)\\b', text, re.IGNORECASE)\n    abstract_end\
          \ = abstract_match.end() if abstract_match else 0\n\n    # Identify Introduction\n\
          \    intro_match = re.search(r'\\b(?:Introduction|1\\.|I\\.)\\b', text,\
          \ re.IGNORECASE)\n    intro_start = intro_match.start() if intro_match else\
          \ None\n\n    # Identify References\n    reference_match = re.search(r'\\\
          b(?:references|bibliography|cited works)\\b', text, re.IGNORECASE)\n   \
          \ reference_start = reference_match.start() if reference_match else len(text)\n\
          \n    # Identify the first major section after Abstract (if no Introduction\
          \ is found)\n    section_match = re.search(r'\\b(?:Methods|Methodology|Materials|Results|Discussion|Experiment|Analysis|Findings)\\\
          b', \n                              text[abstract_end:reference_start],\
          \ re.IGNORECASE)\n    first_section_start = section_match.start() + abstract_end\
          \ if section_match else abstract_end\n\n    # If Introduction exists, start\
          \ from there; otherwise, start from first major section\n    main_start\
          \ = intro_start if intro_start else first_section_start\n\n    return text[main_start:reference_start].strip()\n\
          \ndef extract_references(chunks: list) -> str:\n    \"\"\"\n    Extracts\
          \ the reference section from the chunked text, ensuring multiple chunks\n\
          \    are combined if the references span across them.\n\n    Args:\n   \
          \     chunks (list): A list of text chunks.\n\n    Returns:\n        str:\
          \ The extracted reference section.\n    \"\"\"\n    reference_keywords =\
          \ [\"references\", \"bibliography\", \"cited works\"]\n    reference_chunks\
          \ = []\n\n    # Reverse search for the references section and combine multiple\
          \ chunks\n    for chunk in reversed(chunks):\n        if any(keyword.lower()\
          \ in chunk.lower() for keyword in reference_keywords):\n            \n \
          \           # Split the chunk at the point where the reference section starts\n\
          \            split_chunk = re.split(r'\\b(?:references|bibliography|cited\
          \ works)\\b', chunk, flags=re.IGNORECASE)\n            if len(split_chunk)\
          \ > 1:\n                reference_chunks.append(\"References\\n\" + split_chunk[1].strip())\n\
          \            else:\n                reference_chunks.append(chunk)\n   \
          \         break  # Stop searching once the references section is found\n\
          \        else:\n            reference_chunks.append(chunk)\n\n    reference_text\
          \ = \"\\n\".join(reversed(reference_chunks))  # Ensure the order is correct\n\
          \n    # Extract individual references\n    references = re.findall(r'\\\
          [\\d+\\].*?(?=\\[\\d+\\]|$)', reference_text, re.DOTALL)\n    return references#[:7]\
          \  # Limit the number of references to less than 30\n\ndef main(pdf_text:\
          \ str, chunk_size: int = 1000, overlap: int = 200) -> dict:\n    \"\"\"\n\
          \    Main function to chunk the PDF text and extract references.\n\n   \
          \ Args:\n        pdf_text (str): The extracted text from the PDF.\n    \
          \    chunk_size (int): The size of each chunk.\n        overlap (int): The\
          \ number of characters to overlap between chunks.\n\n    Returns:\n    \
          \    dict: A dictionary containing the chunks, title chunk, and reference\
          \ chunk.\n    \"\"\"\n    chunks = chunk_text(pdf_text, chunk_size, overlap)\n\
          \    title_chunk = chunks[0] if len(chunks) > 0 else \"\"  # First chunk\
          \ is the title\n    reference_chunk = extract_references(chunks)  # Extract\
          \ references section\n    main_body = extract_main_body(pdf_text)  # Extract\
          \ main body of the paper\n\n    return {\n        \"chunks\": chunks,\n\
          \        \"title_chunk\": title_chunk,\n        \"main_body\": main_body,\n\
          \        \"reference_chunk\": reference_chunk[:7]\n    }"
        code_language: python3
        desc: Chunk the conent of the pdf
        outputs:
          chunks:
            children: null
            type: array[string]
          main_body:
            children: null
            type: string
          reference_chunk:
            children: null
            type: array[string]
          title_chunk:
            children: null
            type: string
        selected: false
        title: Chunk Content
        type: code
        variables:
        - value_selector:
          - '1740492212653'
          - text
          variable: pdf_text
      height: 82
      id: '1740498018041'
      position:
        x: 1628.0038558655624
        y: 1009.1189824301473
      positionAbsolute:
        x: 1628.0038558655624
        y: 1009.1189824301473
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: llama3.2:latest
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: 5fe7073d-7328-4f09-8a1c-a5c849667a19
          role: system
          text: 'You will be provided with the content of a paper. Your job is to
            extract the Title and author of the paper which is mostly found in the
            first few paragraphs of the text.

            The output should be in this format:

            Title: the title of the paper

            Authors: The authors of the paper'
        - id: 3598b747-5bc4-49ad-b290-ee171bbd2371
          role: user
          text: '{{#1740498018041.title_chunk#}}'
        selected: false
        title: Original Paper
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1740502396057'
      position:
        x: 2049.134212240788
        y: 960.664641634613
      positionAbsolute:
        x: 2049.134212240788
        y: 960.664641634613
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        instruction: 'You will be provided with the chunk of a research paper. Your
          job is to extract the Title of the paper '
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: llama3.2:latest
          provider: langgenius/ollama/ollama
        parameters:
        - description: The Tilte of the paper
          name: Title
          required: true
          type: string
        query:
        - '1740502396057'
        - text
        reasoning_mode: function_call
        selected: false
        title: Title Extractor
        type: parameter-extractor
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1740502452418'
      position:
        x: 2283.59982471776
        y: 769.6456219908117
      positionAbsolute:
        x: 2283.59982471776
        y: 769.6456219908117
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        instruction: 'You will be provided with the chunk of a research paper. Your
          job is to extract the Author of the paper '
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: llama3.2:latest
          provider: langgenius/ollama/ollama
        parameters:
        - description: The Author of the Reasearch Paper
          name: Author
          required: true
          type: array[string]
        query:
        - '1740502396057'
        - text
        reasoning_mode: prompt
        selected: false
        title: 'Author Extractor '
        type: parameter-extractor
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1740502457661'
      position:
        x: 2590.635982904464
        y: 1009.1189824301473
      positionAbsolute:
        x: 2590.635982904464
        y: 1009.1189824301473
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: This is used to extract the meta data of  the reference papers
        error_handle_mode: terminated
        height: 297
        is_parallel: false
        iterator_selector:
        - '1740498018041'
        - reference_chunk
        output_selector:
        - '1741682372317'
        - Reference_Paper
        output_type: array[object]
        parallel_nums: 10
        selected: false
        start_node_id: 1740526532426start
        title: Reference Paper Meta Data
        type: iteration
        width: 1528
      height: 297
      id: '1740526532426'
      position:
        x: 1895.1641693051224
        y: 1408.990116435635
      positionAbsolute:
        x: 1895.1641693051224
        y: 1408.990116435635
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 1528
      zIndex: 1
    - data:
        desc: ''
        isInIteration: true
        selected: false
        title: ''
        type: iteration-start
      draggable: false
      height: 48
      id: 1740526532426start
      parentId: '1740526532426'
      position:
        x: 24
        y: 68
      positionAbsolute:
        x: 1919.1641693051224
        y: 1476.990116435635
      selectable: false
      sourcePosition: right
      targetPosition: left
      type: custom-iteration-start
      width: 44
      zIndex: 1002
    - data:
        desc: Extract the title and author from the Original Research paper
        instruction: "\"You will be provided with a chunk of text containing references\
          \ from a research paper. Each reference follows a structured format with\
          \ an index (e.g., '[21]'), author names, the title in quotation marks, and\
          \ publication details. Your task is to extract only the reference title\
          \ and the list of authors, ignoring any other details like index numbers,\
          \ publication venue, page numbers, or year. The output should be structured\
          \ in JSON format, with each reference as an object containing:\n'title':\
          \ The reference title (inside quotes in the input).\n'authors': A list of\
          \ authors as they appear, formatted as \"First Initial. Last Name\". If\
          \ no author names are provided, return an empty list [].\nEnsure that the\
          \ extracted information is accurate and properly formatted.\"\nExample Input:\n\
          [21] G.-L. Sun, Y. Xue, Y. Dong, D. Wang, and C. Li, “An Novel Hybrid Method\
          \ for Effectively Classifying Encrypted Traffic,” Proc. of IEEE GLOBECOM,\
          \ pp. 1–5, 2010.  \n[22] J. Brown, M. White, and T. Green, “Deep Learning\
          \ for Network Security,” IEEE Transactions on Information Forensics and\
          \ Security, vol. 14, no. 3, pp. 567–578, 2019.  \n[23] “Advances in AI-Driven\
          \ Cybersecurity,” ACM Computing Surveys, vol. 53, no. 4, pp. 245–267, 2021.\
          \  \n\nExpected JSON Output:\n[\n  {\n    \"title\": \"An Novel Hybrid Method\
          \ for Effectively Classifying Encrypted Traffic\",\n    \"authors\": [\"\
          G.-L. Sun\", \"Y. Xue\", \"Y. Dong\", \"D. Wang\", \"C. Li\"]\n  },\n  {\n\
          \    \"title\": \"Deep Learning for Network Security\",\n    \"authors\"\
          : [\"J. Brown\", \"M. White\", \"T. Green\"]\n  },\n  {\n    \"title\":\
          \ \"Advances in AI-Driven Cybersecurity\",\n    \"authors\": []\n  }\n]\n"
        isInIteration: true
        iteration_id: '1740526532426'
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: llama3.2:latest
          provider: langgenius/ollama/ollama
        parameters:
        - description: The Tilte of the paper
          name: Title
          required: true
          type: string
        - description: The Authors of the paper
          name: Authors
          required: true
          type: array[string]
        query:
        - '1740526532426'
        - item
        reasoning_mode: prompt
        selected: false
        title: Extract Author and Title
        type: parameter-extractor
        variables: []
        vision:
          enabled: false
      height: 134
      id: '1740526583162'
      parentId: '1740526532426'
      position:
        x: 120.46853602331635
        y: 82.8432474721551
      positionAbsolute:
        x: 2015.6327053284388
        y: 1491.83336390779
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        author: jerryakporDify
        desc: ''
        height: 600
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":3,"mode":"normal","style":"font-size:
          16px;","text":"[Information Miner] Get the MetaData of the Original paper","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":3,"textStyle":"font-size:
          16px;"},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"The
          Information Miner Block begins by extracting the text content from the uploaded
          PDF. Once extracted, the document is segmented into chunks, ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":3,"textStyle":"font-size:
          16px;"},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"creating
          a structured list of smaller sections. The title chunk is identified as
          the first element, while the reference chunk isolates the reference ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"section,
          splitting citations by identifiable markers such as [...] to ensure that
          each reference is listed separately.","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"Following
          this, the system extracts the title and author details of the original research
          paper. A search query is then performed via the ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"OpenAlex
          API using the extracted title. To refine the search results, the system
          compares the retrieved metadata with the extracted authors, ensuring ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"that
          only the correct research paper metadata is linked to the knowledge graph.","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: green
        title: ''
        type: ''
        width: 1862
      height: 600
      id: '1740563510815'
      position:
        x: 1504.17334939696
        y: 633.0302324977566
      positionAbsolute:
        x: 1504.17334939696
        y: 633.0302324977566
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 1862
    - data:
        author: jerryakporDify
        desc: ''
        height: 139
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":3,"mode":"normal","style":"","text":"Todo:","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":3,"textStyle":""},{"children":[{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"Remember
          to change the Limit the number of references to less than 30 in the Chunk
          content block","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"listitem","version":1,"value":1}],"direction":"ltr","format":"","indent":0,"type":"list","version":1,"listType":"bullet","start":1,"tag":"ul"}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ''
        type: ''
        width: 318
      height: 139
      id: '1740564708286'
      position:
        x: 1591.3456675842851
        y: 1113.8122644277942
      positionAbsolute:
        x: 1591.3456675842851
        y: 1113.8122644277942
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 318
    - data:
        author: jerryakporDify
        desc: ''
        height: 596
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":3,"mode":"normal","style":"font-size:
          16px;","text":"[References Explorer] Getting the metadata of the Reference
          Paper ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":3,"textStyle":"font-size:
          16px;"},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"The
          References Explorer Block processes the list of reference papers extracted
          from the Information Miner Block, along with the metadata of the original
          research paper. ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"It
          first extracts the references along with their respective authors and then
          uses the OpenAlex API to search for metadata corresponding to each reference
          paper. ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"Once
          the correct metadata is retrieved, the system creates graph nodes for the
          reference papers and establishes connections between them and the original
          paper ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"in
          the Neo4j knowledge graph. This step ensures that citation relationships
          are accurately represented, allowing for enhanced exploration of research
          networks ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"and
          their interconnections.","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: pink
        title: ''
        type: ''
        width: 1593
      height: 596
      id: '1740653150649'
      position:
        x: 1863.4892504697527
        y: 1245.2990887910926
      positionAbsolute:
        x: 1863.4892504697527
        y: 1245.2990887910926
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 1593
    - data:
        desc: ''
        outputs:
        - value_selector:
          - '1741385105846'
          - text
          variable: response
        - value_selector:
          - '1741387098033'
          - text
          variable: graph
        - value_selector:
          - '1740502452418'
          - Title
          variable: new_chat_title
        - value_selector:
          - '1741387098033'
          - files
          variable: image_graph
        selected: false
        title: End 5
        type: end
      height: 168
      id: '1740941888623'
      position:
        x: 7023.929356253269
        y: 1360.116055139607
      positionAbsolute:
        x: 7023.929356253269
        y: 1360.116055139607
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: This is used to provide a Summary for all the combined summary chunks
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: llama3.2:latest
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: a4e2daa0-80a2-422d-915a-1ece81ecfe4d
          role: system
          text: '**"You will be given the content and title of a research paper. Your
            task is to generate a concise, one-paragraph summary that captures the
            key points, findings, and significance of the paper. Keep the summary
            clear, factual, and free from unnecessary details.

            Format the output as follows:**

            # Title:

            <Research Paper Title>


            ## Summary:

            <One-paragraph summary of the paper>


            Guidelines:

            Ensure the summary is concise yet informative (around 3–5 sentences).

            Focus on the main objective, methodology, key findings, and conclusion.

            Avoid unnecessary technical jargon unless essential for understanding.

            Do not add opinions or external information—summarize only what is in
            the provided content.


            Example Output:

            # Title:

            Advancements in Neural Networks for Image Recognition


            ## Summary:

            This research paper explores recent advancements in neural network architectures
            for image recognition, focusing on convolutional networks and their performance
            improvements. The study introduces a novel deep learning model that enhances
            feature extraction and classification accuracy. Experimental results on
            benchmark datasets show a 15% increase in accuracy compared to previous
            methods. The findings highlight the importance of model depth and parameter
            optimization in achieving state-of-the-art performance.'
        - id: ceaa911e-499e-4350-a4cb-0a23a15a569d
          role: user
          text: 'can you summarize the paper below in one paragraph.

            # This is the title of the Paper:

            "{{#1740502452418.Title#}}"

            # content of the paper:

            {{#1740498018041.main_body#}}'
        selected: false
        title: Paper Summarizer
        type: llm
        variables: []
        vision:
          enabled: false
      height: 134
      id: '1741375583243'
      position:
        x: 2671.3606854080085
        y: 469.2692943909044
      positionAbsolute:
        x: 2671.3606854080085
        y: 469.2692943909044
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            ja_JP: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            pt_BR: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            zh_Hans: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
          label:
            en_US: Operation Type
            ja_JP: Operation Type
            pt_BR: Operation Type
            zh_Hans: Operation Type
          llm_description: Choose whether to create, read, update, delete, or relate
            nodes.
          max: null
          min: null
          name: operation
          options:
          - label:
              en_US: Visualize Graph
              ja_JP: Visualize Graph
              pt_BR: Visualize Graph
              zh_Hans: Visualize Graph
            value: visualize_graph
          - label:
              en_US: Create Node
              ja_JP: Create Node
              pt_BR: Create Node
              zh_Hans: Create Node
            value: create
          - label:
              en_US: Read Data
              ja_JP: Read Data
              pt_BR: Read Data
              zh_Hans: Read Data
            value: read
          - label:
              en_US: Update Node
              ja_JP: Update Node
              pt_BR: Update Node
              zh_Hans: Update Node
            value: update
          - label:
              en_US: Delete Node
              ja_JP: Delete Node
              pt_BR: Delete Node
              zh_Hans: Delete Node
            value: delete
          - label:
              en_US: Delete All Node
              ja_JP: Delete All Node
              pt_BR: Delete All Node
              zh_Hans: Delete All Node
            value: delete_all
          - label:
              en_US: Create Relationship
              ja_JP: Create Relationship
              pt_BR: Create Relationship
              zh_Hans: Create Relationship
            value: create_relationship
          - label:
              en_US: Create Nodes with Relationship
              ja_JP: Create Nodes with Relationship
              pt_BR: Create Nodes with Relationship
              zh_Hans: Create Nodes with Relationship
            value: createNodesWithRelationship
          - label:
              en_US: Update Relationship
              ja_JP: Update Relationship
              pt_BR: Update Relationship
              zh_Hans: Update Relationship
            value: update_relationship
          - label:
              en_US: Delete Relationship
              ja_JP: Delete Relationship
              pt_BR: Delete Relationship
              zh_Hans: Delete Relationship
            value: delete_relationship
          - label:
              en_US: Delete Relationship Between Nodes
              ja_JP: Delete Relationship Between Nodes
              pt_BR: Delete Relationship Between Nodes
              zh_Hans: Delete Relationship Between Nodes
            value: delete_relationship_between_nodes
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the node to perform operations on.
            ja_JP: The label of the node to perform operations on.
            pt_BR: The label of the node to perform operations on.
            zh_Hans: The label of the node to perform operations on.
          label:
            en_US: Node Label (start node)
            ja_JP: Node Label (start node)
            pt_BR: Node Label (start node)
            zh_Hans: Node Label (start node)
          llm_description: The label of the node to perform operations on.
          max: null
          min: null
          name: node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for node properties.
            ja_JP: Key-value pairs for node properties.
            pt_BR: Key-value pairs for node properties.
            zh_Hans: Key-value pairs for node properties.
          label:
            en_US: Properties (JSON)
            ja_JP: Properties (JSON)
            pt_BR: Properties (JSON)
            zh_Hans: Properties (JSON)
          llm_description: JSON object with key-value pairs for properties.
          max: null
          min: null
          name: properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the end node to perform operations on.
            ja_JP: The label of the end node to perform operations on.
            pt_BR: The label of the end node to perform operations on.
            zh_Hans: The label of the end node to perform operations on.
          label:
            en_US: End Node Label
            ja_JP: End Node Label
            pt_BR: End Node Label
            zh_Hans: End Node Label
          llm_description: The label of the end node to perform operations on.
          max: null
          min: null
          name: end_node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for end node properties.
            ja_JP: Key-value pairs for end node properties.
            pt_BR: Key-value pairs for end node properties.
            zh_Hans: Key-value pairs for end node properties.
          label:
            en_US: End Node Properties (JSON)
            ja_JP: End Node Properties (JSON)
            pt_BR: End Node Properties (JSON)
            zh_Hans: End Node Properties (JSON)
          llm_description: JSON object with key-value pairs for end node properties.
          max: null
          min: null
          name: end_node_properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The type of relationship to create.
            ja_JP: The type of relationship to create.
            pt_BR: The type of relationship to create.
            zh_Hans: The type of relationship to create.
          label:
            en_US: Relationship Type
            ja_JP: Relationship Type
            pt_BR: Relationship Type
            zh_Hans: Relationship Type
          llm_description: The type of relationship to create.
          max: null
          min: null
          name: relationship_type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for updating node properties or a string for updating
              relationship.
            ja_JP: Key-value pairs for updating node properties or a string for updating
              relationship.
            pt_BR: Key-value pairs for updating node properties or a string for updating
              relationship.
            zh_Hans: Key-value pairs for updating node properties or a string for
              updating relationship.
          label:
            en_US: Update Properties (JSON) or Relationship (str)
            ja_JP: Update Properties (JSON) or Relationship (str)
            pt_BR: Update Properties (JSON) or Relationship (str)
            zh_Hans: Update Properties (JSON) or Relationship (str)
          llm_description: JSON object with key-value pairs used to update properties
            or a string for updating relationship. .
          max: null
          min: null
          name: update_parameter
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: A custom Cypher query to be executed directly.
            ja_JP: A custom Cypher query to be executed directly.
            pt_BR: A custom Cypher query to be executed directly.
            zh_Hans: A custom Cypher query to be executed directly.
          label:
            en_US: Custom Query (for advanced users)
            ja_JP: Custom Query (for advanced users)
            pt_BR: Custom Query (for advanced users)
            zh_Hans: Custom Query (for advanced users)
          llm_description: A custom Cypher query to be executed directly.
          max: null
          min: null
          name: query
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        params:
          end_node_label: ''
          end_node_properties: ''
          node_label: ''
          operation: ''
          properties: ''
          query: ''
          relationship_type: ''
          update_parameter: ''
        provider_id: jerry_aa/neo4j/neo4j
        provider_name: jerry_aa/neo4j/neo4j
        provider_type: builtin
        selected: false
        title: Original Paper Info
        tool_configurations: {}
        tool_label: neo4j
        tool_name: neo4j
        tool_parameters:
          operation:
            type: constant
            value: read
          query:
            type: mixed
            value: 'MATCH (p:Research_Paper {title: "{{#1740502452418.Title#}}"})

              RETURN p.title, p.publication_year, p.cited_by_count, p.total_citations,
              p.summary

              '
        type: tool
      height: 54
      id: '1741379043049'
      position:
        x: 5100.662428183878
        y: 1443.318831363925
      positionAbsolute:
        x: 5100.662428183878
        y: 1443.318831363925
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: A Tool used to communicate with neo4J
        error_strategy: fail-branch
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            ja_JP: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            pt_BR: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            zh_Hans: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
          label:
            en_US: Operation Type
            ja_JP: Operation Type
            pt_BR: Operation Type
            zh_Hans: Operation Type
          llm_description: Choose whether to create, read, update, delete, or relate
            nodes.
          max: null
          min: null
          name: operation
          options:
          - label:
              en_US: Visualize Graph
              ja_JP: Visualize Graph
              pt_BR: Visualize Graph
              zh_Hans: Visualize Graph
            value: visualize_graph
          - label:
              en_US: Create Node
              ja_JP: Create Node
              pt_BR: Create Node
              zh_Hans: Create Node
            value: create
          - label:
              en_US: Read Data
              ja_JP: Read Data
              pt_BR: Read Data
              zh_Hans: Read Data
            value: read
          - label:
              en_US: Update Node
              ja_JP: Update Node
              pt_BR: Update Node
              zh_Hans: Update Node
            value: update
          - label:
              en_US: Delete Node
              ja_JP: Delete Node
              pt_BR: Delete Node
              zh_Hans: Delete Node
            value: delete
          - label:
              en_US: Delete All Node
              ja_JP: Delete All Node
              pt_BR: Delete All Node
              zh_Hans: Delete All Node
            value: delete_all
          - label:
              en_US: Create Relationship
              ja_JP: Create Relationship
              pt_BR: Create Relationship
              zh_Hans: Create Relationship
            value: create_relationship
          - label:
              en_US: Create Nodes with Relationship
              ja_JP: Create Nodes with Relationship
              pt_BR: Create Nodes with Relationship
              zh_Hans: Create Nodes with Relationship
            value: createNodesWithRelationship
          - label:
              en_US: Update Relationship
              ja_JP: Update Relationship
              pt_BR: Update Relationship
              zh_Hans: Update Relationship
            value: update_relationship
          - label:
              en_US: Delete Relationship
              ja_JP: Delete Relationship
              pt_BR: Delete Relationship
              zh_Hans: Delete Relationship
            value: delete_relationship
          - label:
              en_US: Delete Relationship Between Nodes
              ja_JP: Delete Relationship Between Nodes
              pt_BR: Delete Relationship Between Nodes
              zh_Hans: Delete Relationship Between Nodes
            value: delete_relationship_between_nodes
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the node to perform operations on.
            ja_JP: The label of the node to perform operations on.
            pt_BR: The label of the node to perform operations on.
            zh_Hans: The label of the node to perform operations on.
          label:
            en_US: Node Label (start node)
            ja_JP: Node Label (start node)
            pt_BR: Node Label (start node)
            zh_Hans: Node Label (start node)
          llm_description: The label of the node to perform operations on.
          max: null
          min: null
          name: node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for node properties.
            ja_JP: Key-value pairs for node properties.
            pt_BR: Key-value pairs for node properties.
            zh_Hans: Key-value pairs for node properties.
          label:
            en_US: Properties (JSON)
            ja_JP: Properties (JSON)
            pt_BR: Properties (JSON)
            zh_Hans: Properties (JSON)
          llm_description: JSON object with key-value pairs for properties.
          max: null
          min: null
          name: properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the end node to perform operations on.
            ja_JP: The label of the end node to perform operations on.
            pt_BR: The label of the end node to perform operations on.
            zh_Hans: The label of the end node to perform operations on.
          label:
            en_US: End Node Label
            ja_JP: End Node Label
            pt_BR: End Node Label
            zh_Hans: End Node Label
          llm_description: The label of the end node to perform operations on.
          max: null
          min: null
          name: end_node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for end node properties.
            ja_JP: Key-value pairs for end node properties.
            pt_BR: Key-value pairs for end node properties.
            zh_Hans: Key-value pairs for end node properties.
          label:
            en_US: End Node Properties (JSON)
            ja_JP: End Node Properties (JSON)
            pt_BR: End Node Properties (JSON)
            zh_Hans: End Node Properties (JSON)
          llm_description: JSON object with key-value pairs for end node properties.
          max: null
          min: null
          name: end_node_properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The type of relationship to create.
            ja_JP: The type of relationship to create.
            pt_BR: The type of relationship to create.
            zh_Hans: The type of relationship to create.
          label:
            en_US: Relationship Type
            ja_JP: Relationship Type
            pt_BR: Relationship Type
            zh_Hans: Relationship Type
          llm_description: The type of relationship to create.
          max: null
          min: null
          name: relationship_type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for updating node properties or a string for updating
              relationship.
            ja_JP: Key-value pairs for updating node properties or a string for updating
              relationship.
            pt_BR: Key-value pairs for updating node properties or a string for updating
              relationship.
            zh_Hans: Key-value pairs for updating node properties or a string for
              updating relationship.
          label:
            en_US: Update Properties (JSON) or Relationship (str)
            ja_JP: Update Properties (JSON) or Relationship (str)
            pt_BR: Update Properties (JSON) or Relationship (str)
            zh_Hans: Update Properties (JSON) or Relationship (str)
          llm_description: JSON object with key-value pairs used to update properties
            or a string for updating relationship. .
          max: null
          min: null
          name: update_parameter
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: A custom Cypher query to be executed directly.
            ja_JP: A custom Cypher query to be executed directly.
            pt_BR: A custom Cypher query to be executed directly.
            zh_Hans: A custom Cypher query to be executed directly.
          label:
            en_US: Custom Query (for advanced users)
            ja_JP: Custom Query (for advanced users)
            pt_BR: Custom Query (for advanced users)
            zh_Hans: Custom Query (for advanced users)
          llm_description: A custom Cypher query to be executed directly.
          max: null
          min: null
          name: query
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        params:
          end_node_label: ''
          end_node_properties: ''
          node_label: ''
          operation: ''
          properties: ''
          query: ''
          relationship_type: ''
          update_parameter: ''
        provider_id: jerry_aa/neo4j/neo4j
        provider_name: jerry_aa/neo4j/neo4j
        provider_type: builtin
        retry_config:
          max_retries: 3
          retry_enabled: false
          retry_interval: 1000
        selected: false
        title: neo4j
        tool_configurations: {}
        tool_label: neo4j
        tool_name: neo4j
        tool_parameters:
          operation:
            type: constant
            value: read
          properties:
            type: mixed
            value: '{}'
          query:
            type: mixed
            value: '{{#1741782292071.text#}}'
          update_parameter:
            type: mixed
            value: '{}'
        type: tool
      height: 118
      id: '1741383675749'
      position:
        x: 964.7747301326917
        y: 2513.3132283779196
      positionAbsolute:
        x: 964.7747301326917
        y: 2513.3132283779196
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: Used to convert the Query result to String.
        selected: false
        template: "\r\n\r\n# User Query \r\n{{ Query }}\r\n\r\n# Cyper Query Generated\r\
          \n{{ cypher_query }}\r\n\r\n# Cyper Qeury Result Data Base 1\r\n{{ Neo4j_0\
          \ }}\r\n\r\n# Cyper Qeury Result Data Base 2\r\n{{ Neo4j_1 }}\r\n"
        title: Result to string
        type: template-transform
        variables:
        - value_selector:
          - '1740085577359'
          - Query
          variable: Query
        - value_selector:
          - '1741782292071'
          - text
          variable: cypher_query
        - value_selector:
          - '1741383675749'
          - json
          variable: Neo4j_0
        - value_selector:
          - '17417834743570'
          - json
          variable: Neo4j_1
      height: 98
      id: '1741383867672'
      position:
        x: 2063.875525752034
        y: 2252.505638602968
      positionAbsolute:
        x: 2063.875525752034
        y: 2252.505638602968
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: This is used to generate a response based on the result of the cyper
          query
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: llama3.2:latest
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: aa222139-2846-4889-8591-66f31a466653
          role: system
          text: "<system_prompt>\nYOU WILL BE GIVEN THE RESULT OF A CYPHER QUERY EXECUTED\
            \ ON A **NEO4J DATABASE**. YOUR TASK IS TO **ACCURATELY ANALYZE THE OUTPUT\
            \ AND PROVIDE A CLEAR, CONCISE, AND NATURAL FIRST-PERSON RESPONSE** EXPLAINING\
            \ WHAT THE RESULT MEANS.  \n\n### INSTRUCTIONS  \n\n **INTERPRET THE QUERY\
            \ RESULT CORRECTLY:**  \n   - **READ the query result carefully** and\
            \ extract the relevant data.  \n   - **DO NOT assume the result is empty\
            \ unless it explicitly contains no data.**  \n   - **IF there is data,\
            \ include it accurately in the response.**  \n   - **IF there is no data\
            \ (empty list, NULL, or COUNT = 0), provide a clear response** (e.g.,\
            \ \"There are no research papers in the database.\").  \n\n **MAINTAIN\
            \ NATURAL LANGUAGE:**  \n   - **USE first-person, conversational language**\
            \ to explain the result.  \n   - **AVOID technical jargon** unless absolutely\
            \ necessary.  \n   - **INTEGRATE numerical values naturally** in sentences\
            \ (e.g., \"There are 5 research papers in the database.\").  \n\n **ENSURE\
            \ ACCURACY AND RELEVANCE:**  \n   - **MATCH the response to the intended\
            \ question** in the query.  \n   - **DO NOT include additional explanations\
            \ or assumptions beyond the result.**  \n   - **DO NOT say the database\
            \ is empty if the result contains data.**  \n   - **DO NOT add Cypher\
            \ query syntax in the response.**  \n\n**OUTPUT FORMAT:**  \n   - **RETURN\
            \ ONLY the response as natural language.**  \n   - **NO extra formatting,\
            \ explanations, or structured data like JSON.**  \n\n---\n\n### EXAMPLES\
            \  \n\n#### ** CORRECT EXAMPLES**  \n\n#### **<INPUT>**  \n*\"Which author\
            \ wrote the most research papers?\"*  \n**Cypher Query Result:**  \n```plaintext\n\
            [{'results': [{'a.name': 'John Smith', 'paper_count': 42}]}]\n```\n\n\
            #### **<OUTPUT>**  \n*\"John Smith has authored the most research papers,\
            \ with a total of 42.\"*  \n\n---\n\n#### **<INPUT>**  \n*\"How many research\
            \ papers were published in 2023?\"*  \n**Cypher Query Result:**  \n```plaintext\n\
            [{'results': [{'COUNT(p)': 0}]}]\n```\n\n#### **<OUTPUT>**  \n*\"There\
            \ are no research papers published in 2023.\"*  \n\n---\n\n#### ** INCORRECT\
            \ EXAMPLES**  \n\n **Assuming no data when there is data**  \n**Wrong\
            \ Output:**  \n*\"There are no research papers by any author.\"*  \n**(Incorrect\
            \ because the query returned a valid result.)**  \n\n **Including extra\
            \ explanations or Cypher query**  \n**Wrong Output:**  \n*\"The query\
            \ executed was: MATCH (a:Author)-[:WRITTEN_BY]->(p:Research_Paper) RETURN\
            \ a.name, COUNT(p) ORDER BY COUNT(p) DESC LIMIT 1. The most published\
            \ author is John Smith with 42 papers.\"*  \n**(Incorrect because it includes\
            \ unnecessary query details.)**  \n\n---\n\n### WHAT NOT TO DO  \n- **DO\
            \ NOT** generate explanations beyond the query result.  \n- **DO NOT**\
            \ assume missing details—only use data provided in the result.  \n- **DO\
            \ NOT** add Cypher queries, JSON, or structured data to the response.\
            \  \n- **DO NOT** make the response overly technical—keep it simple and\
            \ natural.  \n\n</system_prompt>\n"
        - id: de3f0d05-13e7-4671-8d64-35ed0648e961
          role: user
          text: 'can you generate a respone to the query:

            {{#1741383867672.output#}}'
        selected: false
        title: Query Response Generator
        type: llm
        variables: []
        vision:
          enabled: false
      height: 134
      id: '1741383915003'
      position:
        x: 2096.1509747931823
        y: 2376.593762764523
      positionAbsolute:
        x: 2096.1509747931823
        y: 2376.593762764523
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: llama3.2:latest
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: f02a1c92-198c-4d4c-8c3c-de0c0410c833
          role: system
          text: "<system_prompt>\nYOU ARE A HIGHLY SKILLED RESEARCH ANALYST TASKED\
            \ WITH GENERATING DETAILED, WELL-STRUCTURED REPORTS ON ACADEMIC PAPERS.\
            \ YOUR PRIMARY OBJECTIVE IS TO ANALYZE THE PROVIDED DATA AND PRODUCE A\
            \ COMPREHENSIVE REPORT THAT SUMMARIZES THE KEY DETAILS, CONTRIBUTIONS,\
            \ AND IMPACT OF THE PAPER.\n\n### INSTRUCTIONS ###\n\n1. **EXTRACT ESSENTIAL\
            \ PAPER DETAILS:**\n   - IDENTIFY the paper’s title, publication year,\
            \ total citations, and summary.\n   - LIST the authors and their affiliations\
            \ if available.\n\n2. **SUMMARIZE THE CORE CONTRIBUTIONS:**\n   - OUTLINE\
            \ the paper’s primary findings and innovations.\n   - HIGHLIGHT key contributions\
            \ in a structured format.\n\n3. **EVALUATE EXPERIMENTAL RESULTS:**\n \
            \  - SUMMARIZE the evaluation methods and datasets used.\n   - PRESENT\
            \ the performance results and comparisons with existing methods.\n\n4.\
            \ **IDENTIFY REFERENCED WORKS:**\n   - LIST key papers cited by the original\
            \ paper and their Authors.\n   - NOTE influential prior work shaping the\
            \ research.\n\n5. **OUTLINE FUTURE RESEARCH DIRECTIONS:**\n   - EXTRACT\
            \ any proposed future applications or extensions.\n\n6. **STRUCTURE REPORT\
            \ CLEARLY:**\n   - USE well-defined sections: **Introduction, Key Contributions,\
            \ Experimental Results, References, and Future Directions.**\n   - MAINTAIN\
            \ a formal academic tone.\n\n### CHAIN OF THOUGHT ###\n\nFOLLOW THIS ORDER\
            \ TO GENERATE A HIGH-QUALITY REPORT:\n\n1. **UNDERSTAND THE PAPER DATA:**\n\
            \   - PARSE the given data structure carefully.\n   - IDENTIFY missing\
            \ or incomplete data fields.\n\n2. **ANALYZE THE PAPER'S CONTRIBUTIONS:**\n\
            \   - EXAMINE the summary and extract key research insights.\n   - DETERMINE\
            \ how the paper advances its field.\n\n3. **COMPARE WITH PRIOR RESEARCH:**\n\
            \   - REVIEW cited references to position the paper within the broader\
            \ research landscape.\n\n4. **SUMMARIZE FUTURE DIRECTIONS:**\n   - IDENTIFY\
            \ any research gaps or potential improvements.\n\n5. **COMPILE A FINAL\
            \ REPORT:**\n   - ORGANIZE information in a professional academic format.\n\
            \   - ENSURE clarity, coherence, and completeness.\n\n### REPORT FORMAT\
            \ TEMPLATE ###\n\n**Title:** {Paper Title}  \n**Authors:** {List of Authors}\
            \  \n**Publication Year:** {Year}  \n**Total Citations:** {Citations Count}\
            \  \n\n## **1. Introduction**  \n{Brief overview of the paper, its significance,\
            \ and field of research.}\n\n## **2. Key Contributions**  \n- {Bullet\
            \ points summarizing the major contributions of the paper.}\n\n## **3.\
            \ Experimental Results**  \n- {Description of experiments conducted and\
            \ performance benchmarks.}  \n\n## **4. References**  \n- {List of referenced\
            \ papers that shaped the researchand their Authors.}  \n\n## **5. Future\
            \ Research Directions**  \n- {Summary of future work proposed by the authors.}\n\
            \n### WHAT NOT TO DO ###\n- **DO NOT** INCLUDE GUESSWORK OR FABRICATE\
            \ INFORMATION.\n- **DO NOT** OMIT CRUCIAL DETAILS SUCH AS CITATIONS OR\
            \ EXPERIMENTAL RESULTS.\n- **DO NOT** WRITE IN AN INFORMAL OR CASUAL STYLE.\n\
            - **DO NOT** PROVIDE OPINIONS—STRICTLY SUMMARIZE FACTUAL CONTENT.\n\n\
            </system_prompt>\n"
        - id: 091924f8-a220-49d6-a845-7edbe224c8cb
          role: user
          text: 'can you generate the report for this :

            {{#1741386545732.output#}}'
        selected: false
        title: Report Generator
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1741385105846'
      position:
        x: 6577.763908705701
        y: 1393.447147186689
      positionAbsolute:
        x: 6577.763908705701
        y: 1393.447147186689
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            ja_JP: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            pt_BR: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            zh_Hans: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
          label:
            en_US: Operation Type
            ja_JP: Operation Type
            pt_BR: Operation Type
            zh_Hans: Operation Type
          llm_description: Choose whether to create, read, update, delete, or relate
            nodes.
          max: null
          min: null
          name: operation
          options:
          - label:
              en_US: Visualize Graph
              ja_JP: Visualize Graph
              pt_BR: Visualize Graph
              zh_Hans: Visualize Graph
            value: visualize_graph
          - label:
              en_US: Create Node
              ja_JP: Create Node
              pt_BR: Create Node
              zh_Hans: Create Node
            value: create
          - label:
              en_US: Read Data
              ja_JP: Read Data
              pt_BR: Read Data
              zh_Hans: Read Data
            value: read
          - label:
              en_US: Update Node
              ja_JP: Update Node
              pt_BR: Update Node
              zh_Hans: Update Node
            value: update
          - label:
              en_US: Delete Node
              ja_JP: Delete Node
              pt_BR: Delete Node
              zh_Hans: Delete Node
            value: delete
          - label:
              en_US: Delete All Node
              ja_JP: Delete All Node
              pt_BR: Delete All Node
              zh_Hans: Delete All Node
            value: delete_all
          - label:
              en_US: Create Relationship
              ja_JP: Create Relationship
              pt_BR: Create Relationship
              zh_Hans: Create Relationship
            value: create_relationship
          - label:
              en_US: Create Nodes with Relationship
              ja_JP: Create Nodes with Relationship
              pt_BR: Create Nodes with Relationship
              zh_Hans: Create Nodes with Relationship
            value: createNodesWithRelationship
          - label:
              en_US: Update Relationship
              ja_JP: Update Relationship
              pt_BR: Update Relationship
              zh_Hans: Update Relationship
            value: update_relationship
          - label:
              en_US: Delete Relationship
              ja_JP: Delete Relationship
              pt_BR: Delete Relationship
              zh_Hans: Delete Relationship
            value: delete_relationship
          - label:
              en_US: Delete Relationship Between Nodes
              ja_JP: Delete Relationship Between Nodes
              pt_BR: Delete Relationship Between Nodes
              zh_Hans: Delete Relationship Between Nodes
            value: delete_relationship_between_nodes
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the node to perform operations on.
            ja_JP: The label of the node to perform operations on.
            pt_BR: The label of the node to perform operations on.
            zh_Hans: The label of the node to perform operations on.
          label:
            en_US: Node Label (start node)
            ja_JP: Node Label (start node)
            pt_BR: Node Label (start node)
            zh_Hans: Node Label (start node)
          llm_description: The label of the node to perform operations on.
          max: null
          min: null
          name: node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for node properties.
            ja_JP: Key-value pairs for node properties.
            pt_BR: Key-value pairs for node properties.
            zh_Hans: Key-value pairs for node properties.
          label:
            en_US: Properties (JSON)
            ja_JP: Properties (JSON)
            pt_BR: Properties (JSON)
            zh_Hans: Properties (JSON)
          llm_description: JSON object with key-value pairs for properties.
          max: null
          min: null
          name: properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the end node to perform operations on.
            ja_JP: The label of the end node to perform operations on.
            pt_BR: The label of the end node to perform operations on.
            zh_Hans: The label of the end node to perform operations on.
          label:
            en_US: End Node Label
            ja_JP: End Node Label
            pt_BR: End Node Label
            zh_Hans: End Node Label
          llm_description: The label of the end node to perform operations on.
          max: null
          min: null
          name: end_node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for end node properties.
            ja_JP: Key-value pairs for end node properties.
            pt_BR: Key-value pairs for end node properties.
            zh_Hans: Key-value pairs for end node properties.
          label:
            en_US: End Node Properties (JSON)
            ja_JP: End Node Properties (JSON)
            pt_BR: End Node Properties (JSON)
            zh_Hans: End Node Properties (JSON)
          llm_description: JSON object with key-value pairs for end node properties.
          max: null
          min: null
          name: end_node_properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The type of relationship to create.
            ja_JP: The type of relationship to create.
            pt_BR: The type of relationship to create.
            zh_Hans: The type of relationship to create.
          label:
            en_US: Relationship Type
            ja_JP: Relationship Type
            pt_BR: Relationship Type
            zh_Hans: Relationship Type
          llm_description: The type of relationship to create.
          max: null
          min: null
          name: relationship_type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for updating node properties or a string for updating
              relationship.
            ja_JP: Key-value pairs for updating node properties or a string for updating
              relationship.
            pt_BR: Key-value pairs for updating node properties or a string for updating
              relationship.
            zh_Hans: Key-value pairs for updating node properties or a string for
              updating relationship.
          label:
            en_US: Update Properties (JSON) or Relationship (str)
            ja_JP: Update Properties (JSON) or Relationship (str)
            pt_BR: Update Properties (JSON) or Relationship (str)
            zh_Hans: Update Properties (JSON) or Relationship (str)
          llm_description: JSON object with key-value pairs used to update properties
            or a string for updating relationship. .
          max: null
          min: null
          name: update_parameter
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: A custom Cypher query to be executed directly.
            ja_JP: A custom Cypher query to be executed directly.
            pt_BR: A custom Cypher query to be executed directly.
            zh_Hans: A custom Cypher query to be executed directly.
          label:
            en_US: Custom Query (for advanced users)
            ja_JP: Custom Query (for advanced users)
            pt_BR: Custom Query (for advanced users)
            zh_Hans: Custom Query (for advanced users)
          llm_description: A custom Cypher query to be executed directly.
          max: null
          min: null
          name: query
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        params:
          end_node_label: ''
          end_node_properties: ''
          node_label: ''
          operation: ''
          properties: ''
          query: ''
          relationship_type: ''
          update_parameter: ''
        provider_id: jerry_aa/neo4j/neo4j
        provider_name: jerry_aa/neo4j/neo4j
        provider_type: builtin
        selected: false
        title: Cited Paper Infor
        tool_configurations: {}
        tool_label: neo4j
        tool_name: neo4j
        tool_parameters:
          operation:
            type: constant
            value: read
          query:
            type: mixed
            value: "MATCH (p:Research_Paper {title: \"{{#1740502452418.Title#}}\"\
              })-[:CITED]->(r:Reference_Paper)\nWITH COUNT(DISTINCT r) AS Total_Reference_Papers,\
              \ \n     collect({title: r.title, authors: r.authors}) AS Reference_Papers\n\
              RETURN Total_Reference_Papers, Reference_Papers"
        type: tool
      height: 54
      id: '17413860651250'
      position:
        x: 5639.28476944631
        y: 1338.5255161857772
      positionAbsolute:
        x: 5639.28476944631
        y: 1338.5255161857772
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            ja_JP: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            pt_BR: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            zh_Hans: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
          label:
            en_US: Operation Type
            ja_JP: Operation Type
            pt_BR: Operation Type
            zh_Hans: Operation Type
          llm_description: Choose whether to create, read, update, delete, or relate
            nodes.
          max: null
          min: null
          name: operation
          options:
          - label:
              en_US: Visualize Graph
              ja_JP: Visualize Graph
              pt_BR: Visualize Graph
              zh_Hans: Visualize Graph
            value: visualize_graph
          - label:
              en_US: Create Node
              ja_JP: Create Node
              pt_BR: Create Node
              zh_Hans: Create Node
            value: create
          - label:
              en_US: Read Data
              ja_JP: Read Data
              pt_BR: Read Data
              zh_Hans: Read Data
            value: read
          - label:
              en_US: Update Node
              ja_JP: Update Node
              pt_BR: Update Node
              zh_Hans: Update Node
            value: update
          - label:
              en_US: Delete Node
              ja_JP: Delete Node
              pt_BR: Delete Node
              zh_Hans: Delete Node
            value: delete
          - label:
              en_US: Delete All Node
              ja_JP: Delete All Node
              pt_BR: Delete All Node
              zh_Hans: Delete All Node
            value: delete_all
          - label:
              en_US: Create Relationship
              ja_JP: Create Relationship
              pt_BR: Create Relationship
              zh_Hans: Create Relationship
            value: create_relationship
          - label:
              en_US: Create Nodes with Relationship
              ja_JP: Create Nodes with Relationship
              pt_BR: Create Nodes with Relationship
              zh_Hans: Create Nodes with Relationship
            value: createNodesWithRelationship
          - label:
              en_US: Update Relationship
              ja_JP: Update Relationship
              pt_BR: Update Relationship
              zh_Hans: Update Relationship
            value: update_relationship
          - label:
              en_US: Delete Relationship
              ja_JP: Delete Relationship
              pt_BR: Delete Relationship
              zh_Hans: Delete Relationship
            value: delete_relationship
          - label:
              en_US: Delete Relationship Between Nodes
              ja_JP: Delete Relationship Between Nodes
              pt_BR: Delete Relationship Between Nodes
              zh_Hans: Delete Relationship Between Nodes
            value: delete_relationship_between_nodes
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the node to perform operations on.
            ja_JP: The label of the node to perform operations on.
            pt_BR: The label of the node to perform operations on.
            zh_Hans: The label of the node to perform operations on.
          label:
            en_US: Node Label (start node)
            ja_JP: Node Label (start node)
            pt_BR: Node Label (start node)
            zh_Hans: Node Label (start node)
          llm_description: The label of the node to perform operations on.
          max: null
          min: null
          name: node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for node properties.
            ja_JP: Key-value pairs for node properties.
            pt_BR: Key-value pairs for node properties.
            zh_Hans: Key-value pairs for node properties.
          label:
            en_US: Properties (JSON)
            ja_JP: Properties (JSON)
            pt_BR: Properties (JSON)
            zh_Hans: Properties (JSON)
          llm_description: JSON object with key-value pairs for properties.
          max: null
          min: null
          name: properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the end node to perform operations on.
            ja_JP: The label of the end node to perform operations on.
            pt_BR: The label of the end node to perform operations on.
            zh_Hans: The label of the end node to perform operations on.
          label:
            en_US: End Node Label
            ja_JP: End Node Label
            pt_BR: End Node Label
            zh_Hans: End Node Label
          llm_description: The label of the end node to perform operations on.
          max: null
          min: null
          name: end_node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for end node properties.
            ja_JP: Key-value pairs for end node properties.
            pt_BR: Key-value pairs for end node properties.
            zh_Hans: Key-value pairs for end node properties.
          label:
            en_US: End Node Properties (JSON)
            ja_JP: End Node Properties (JSON)
            pt_BR: End Node Properties (JSON)
            zh_Hans: End Node Properties (JSON)
          llm_description: JSON object with key-value pairs for end node properties.
          max: null
          min: null
          name: end_node_properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The type of relationship to create.
            ja_JP: The type of relationship to create.
            pt_BR: The type of relationship to create.
            zh_Hans: The type of relationship to create.
          label:
            en_US: Relationship Type
            ja_JP: Relationship Type
            pt_BR: Relationship Type
            zh_Hans: Relationship Type
          llm_description: The type of relationship to create.
          max: null
          min: null
          name: relationship_type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for updating node properties or a string for updating
              relationship.
            ja_JP: Key-value pairs for updating node properties or a string for updating
              relationship.
            pt_BR: Key-value pairs for updating node properties or a string for updating
              relationship.
            zh_Hans: Key-value pairs for updating node properties or a string for
              updating relationship.
          label:
            en_US: Update Properties (JSON) or Relationship (str)
            ja_JP: Update Properties (JSON) or Relationship (str)
            pt_BR: Update Properties (JSON) or Relationship (str)
            zh_Hans: Update Properties (JSON) or Relationship (str)
          llm_description: JSON object with key-value pairs used to update properties
            or a string for updating relationship. .
          max: null
          min: null
          name: update_parameter
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: A custom Cypher query to be executed directly.
            ja_JP: A custom Cypher query to be executed directly.
            pt_BR: A custom Cypher query to be executed directly.
            zh_Hans: A custom Cypher query to be executed directly.
          label:
            en_US: Custom Query (for advanced users)
            ja_JP: Custom Query (for advanced users)
            pt_BR: Custom Query (for advanced users)
            zh_Hans: Custom Query (for advanced users)
          llm_description: A custom Cypher query to be executed directly.
          max: null
          min: null
          name: query
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        params:
          end_node_label: ''
          end_node_properties: ''
          node_label: ''
          operation: ''
          properties: ''
          query: ''
          relationship_type: ''
          update_parameter: ''
        provider_id: jerry_aa/neo4j/neo4j
        provider_name: jerry_aa/neo4j/neo4j
        provider_type: builtin
        selected: false
        title: Source info
        tool_configurations: {}
        tool_label: neo4j
        tool_name: neo4j
        tool_parameters:
          operation:
            type: constant
            value: read
          query:
            type: mixed
            value: "MATCH (p:Research_Paper {title: \"{{#1740502452418.Title#}}\"\
              })-[:PUBLISHED_IN]->(s:Source)\nWITH COUNT(DISTINCT s) AS Total_Sources,\
              \ \n     collect({name: s.name, host: s.host_organization}) AS Sources\n\
              RETURN Total_Sources, Sources"
        type: tool
      height: 54
      id: '17413860683430'
      position:
        x: 5639.28476944631
        y: 1445.7665140274712
      positionAbsolute:
        x: 5639.28476944631
        y: 1445.7665140274712
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        selected: false
        template: "# Original Paper\r\n{{ original_paper }}\r\n\r\n# Authors of the\
          \ Original Paper\r\n{{ authors }}\r\n\r\n# Main Topic info of the Original\
          \ Paper\r\n{{ Topic }}\r\n\r\n# Source info of the Original Paper\r\n{{\
          \ Source_info }}\r\n\r\n# Concept info of the Original Paper\r\n{{ concepts\
          \ }}\r\n\r\n\r\n\r\n# Papers Referenced by the Original Paper \r\n{{ reference_paper\
          \ }}\r\n\r\n"
        title: Merge Info
        type: template-transform
        variables:
        - value_selector:
          - '1741379043049'
          - json
          variable: original_paper
        - value_selector:
          - '17413860651250'
          - json
          variable: reference_paper
        - value_selector:
          - '17413860683430'
          - json
          variable: Source_info
        - value_selector:
          - '17414156283300'
          - json
          variable: authors
        - value_selector:
          - '17417114843540'
          - text
          variable: concepts
        - value_selector:
          - '1741709809655'
          - text
          variable: Topic
      height: 54
      id: '1741386545732'
      position:
        x: 6211.636569867947
        y: 1371.3831561412965
      positionAbsolute:
        x: 6211.636569867947
        y: 1371.3831561412965
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            ja_JP: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            pt_BR: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            zh_Hans: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
          label:
            en_US: Operation Type
            ja_JP: Operation Type
            pt_BR: Operation Type
            zh_Hans: Operation Type
          llm_description: Choose whether to create, read, update, delete, or relate
            nodes.
          max: null
          min: null
          name: operation
          options:
          - label:
              en_US: Visualize Graph
              ja_JP: Visualize Graph
              pt_BR: Visualize Graph
              zh_Hans: Visualize Graph
            value: visualize_graph
          - label:
              en_US: Create Node
              ja_JP: Create Node
              pt_BR: Create Node
              zh_Hans: Create Node
            value: create
          - label:
              en_US: Read Data
              ja_JP: Read Data
              pt_BR: Read Data
              zh_Hans: Read Data
            value: read
          - label:
              en_US: Update Node
              ja_JP: Update Node
              pt_BR: Update Node
              zh_Hans: Update Node
            value: update
          - label:
              en_US: Delete Node
              ja_JP: Delete Node
              pt_BR: Delete Node
              zh_Hans: Delete Node
            value: delete
          - label:
              en_US: Delete All Node
              ja_JP: Delete All Node
              pt_BR: Delete All Node
              zh_Hans: Delete All Node
            value: delete_all
          - label:
              en_US: Create Relationship
              ja_JP: Create Relationship
              pt_BR: Create Relationship
              zh_Hans: Create Relationship
            value: create_relationship
          - label:
              en_US: Create Nodes with Relationship
              ja_JP: Create Nodes with Relationship
              pt_BR: Create Nodes with Relationship
              zh_Hans: Create Nodes with Relationship
            value: createNodesWithRelationship
          - label:
              en_US: Update Relationship
              ja_JP: Update Relationship
              pt_BR: Update Relationship
              zh_Hans: Update Relationship
            value: update_relationship
          - label:
              en_US: Delete Relationship
              ja_JP: Delete Relationship
              pt_BR: Delete Relationship
              zh_Hans: Delete Relationship
            value: delete_relationship
          - label:
              en_US: Delete Relationship Between Nodes
              ja_JP: Delete Relationship Between Nodes
              pt_BR: Delete Relationship Between Nodes
              zh_Hans: Delete Relationship Between Nodes
            value: delete_relationship_between_nodes
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the node to perform operations on.
            ja_JP: The label of the node to perform operations on.
            pt_BR: The label of the node to perform operations on.
            zh_Hans: The label of the node to perform operations on.
          label:
            en_US: Node Label (start node)
            ja_JP: Node Label (start node)
            pt_BR: Node Label (start node)
            zh_Hans: Node Label (start node)
          llm_description: The label of the node to perform operations on.
          max: null
          min: null
          name: node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for node properties.
            ja_JP: Key-value pairs for node properties.
            pt_BR: Key-value pairs for node properties.
            zh_Hans: Key-value pairs for node properties.
          label:
            en_US: Properties (JSON)
            ja_JP: Properties (JSON)
            pt_BR: Properties (JSON)
            zh_Hans: Properties (JSON)
          llm_description: JSON object with key-value pairs for properties.
          max: null
          min: null
          name: properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the end node to perform operations on.
            ja_JP: The label of the end node to perform operations on.
            pt_BR: The label of the end node to perform operations on.
            zh_Hans: The label of the end node to perform operations on.
          label:
            en_US: End Node Label
            ja_JP: End Node Label
            pt_BR: End Node Label
            zh_Hans: End Node Label
          llm_description: The label of the end node to perform operations on.
          max: null
          min: null
          name: end_node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for end node properties.
            ja_JP: Key-value pairs for end node properties.
            pt_BR: Key-value pairs for end node properties.
            zh_Hans: Key-value pairs for end node properties.
          label:
            en_US: End Node Properties (JSON)
            ja_JP: End Node Properties (JSON)
            pt_BR: End Node Properties (JSON)
            zh_Hans: End Node Properties (JSON)
          llm_description: JSON object with key-value pairs for end node properties.
          max: null
          min: null
          name: end_node_properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The type of relationship to create.
            ja_JP: The type of relationship to create.
            pt_BR: The type of relationship to create.
            zh_Hans: The type of relationship to create.
          label:
            en_US: Relationship Type
            ja_JP: Relationship Type
            pt_BR: Relationship Type
            zh_Hans: Relationship Type
          llm_description: The type of relationship to create.
          max: null
          min: null
          name: relationship_type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for updating node properties or a string for updating
              relationship.
            ja_JP: Key-value pairs for updating node properties or a string for updating
              relationship.
            pt_BR: Key-value pairs for updating node properties or a string for updating
              relationship.
            zh_Hans: Key-value pairs for updating node properties or a string for
              updating relationship.
          label:
            en_US: Update Properties (JSON) or Relationship (str)
            ja_JP: Update Properties (JSON) or Relationship (str)
            pt_BR: Update Properties (JSON) or Relationship (str)
            zh_Hans: Update Properties (JSON) or Relationship (str)
          llm_description: JSON object with key-value pairs used to update properties
            or a string for updating relationship. .
          max: null
          min: null
          name: update_parameter
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: A custom Cypher query to be executed directly.
            ja_JP: A custom Cypher query to be executed directly.
            pt_BR: A custom Cypher query to be executed directly.
            zh_Hans: A custom Cypher query to be executed directly.
          label:
            en_US: Custom Query (for advanced users)
            ja_JP: Custom Query (for advanced users)
            pt_BR: Custom Query (for advanced users)
            zh_Hans: Custom Query (for advanced users)
          llm_description: A custom Cypher query to be executed directly.
          max: null
          min: null
          name: query
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        params:
          end_node_label: ''
          end_node_properties: ''
          node_label: ''
          operation: ''
          properties: ''
          query: ''
          relationship_type: ''
          update_parameter: ''
        provider_id: jerry_aa/neo4j/neo4j
        provider_name: jerry_aa/neo4j/neo4j
        provider_type: builtin
        selected: false
        title: Visualize Graph Gen
        tool_configurations: {}
        tool_label: neo4j
        tool_name: neo4j
        tool_parameters:
          node_label:
            type: mixed
            value: Research_Paper
          operation:
            type: constant
            value: visualize_graph
          properties:
            type: mixed
            value: '{"title": "{{#1740502452418.Title#}}"}'
        type: tool
      height: 54
      id: '1741387098033'
      position:
        x: 5644.486546244187
        y: 1637.3912433565474
      positionAbsolute:
        x: 5644.486546244187
        y: 1637.3912433565474
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            ja_JP: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            pt_BR: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            zh_Hans: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
          label:
            en_US: Operation Type
            ja_JP: Operation Type
            pt_BR: Operation Type
            zh_Hans: Operation Type
          llm_description: Choose whether to create, read, update, delete, or relate
            nodes.
          max: null
          min: null
          name: operation
          options:
          - label:
              en_US: Visualize Graph
              ja_JP: Visualize Graph
              pt_BR: Visualize Graph
              zh_Hans: Visualize Graph
            value: visualize_graph
          - label:
              en_US: Create Node
              ja_JP: Create Node
              pt_BR: Create Node
              zh_Hans: Create Node
            value: create
          - label:
              en_US: Read Data
              ja_JP: Read Data
              pt_BR: Read Data
              zh_Hans: Read Data
            value: read
          - label:
              en_US: Update Node
              ja_JP: Update Node
              pt_BR: Update Node
              zh_Hans: Update Node
            value: update
          - label:
              en_US: Delete Node
              ja_JP: Delete Node
              pt_BR: Delete Node
              zh_Hans: Delete Node
            value: delete
          - label:
              en_US: Delete All Node
              ja_JP: Delete All Node
              pt_BR: Delete All Node
              zh_Hans: Delete All Node
            value: delete_all
          - label:
              en_US: Create Relationship
              ja_JP: Create Relationship
              pt_BR: Create Relationship
              zh_Hans: Create Relationship
            value: create_relationship
          - label:
              en_US: Create Nodes with Relationship
              ja_JP: Create Nodes with Relationship
              pt_BR: Create Nodes with Relationship
              zh_Hans: Create Nodes with Relationship
            value: createNodesWithRelationship
          - label:
              en_US: Update Relationship
              ja_JP: Update Relationship
              pt_BR: Update Relationship
              zh_Hans: Update Relationship
            value: update_relationship
          - label:
              en_US: Delete Relationship
              ja_JP: Delete Relationship
              pt_BR: Delete Relationship
              zh_Hans: Delete Relationship
            value: delete_relationship
          - label:
              en_US: Delete Relationship Between Nodes
              ja_JP: Delete Relationship Between Nodes
              pt_BR: Delete Relationship Between Nodes
              zh_Hans: Delete Relationship Between Nodes
            value: delete_relationship_between_nodes
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the node to perform operations on.
            ja_JP: The label of the node to perform operations on.
            pt_BR: The label of the node to perform operations on.
            zh_Hans: The label of the node to perform operations on.
          label:
            en_US: Node Label (start node)
            ja_JP: Node Label (start node)
            pt_BR: Node Label (start node)
            zh_Hans: Node Label (start node)
          llm_description: The label of the node to perform operations on.
          max: null
          min: null
          name: node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for node properties.
            ja_JP: Key-value pairs for node properties.
            pt_BR: Key-value pairs for node properties.
            zh_Hans: Key-value pairs for node properties.
          label:
            en_US: Properties (JSON)
            ja_JP: Properties (JSON)
            pt_BR: Properties (JSON)
            zh_Hans: Properties (JSON)
          llm_description: JSON object with key-value pairs for properties.
          max: null
          min: null
          name: properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the end node to perform operations on.
            ja_JP: The label of the end node to perform operations on.
            pt_BR: The label of the end node to perform operations on.
            zh_Hans: The label of the end node to perform operations on.
          label:
            en_US: End Node Label
            ja_JP: End Node Label
            pt_BR: End Node Label
            zh_Hans: End Node Label
          llm_description: The label of the end node to perform operations on.
          max: null
          min: null
          name: end_node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for end node properties.
            ja_JP: Key-value pairs for end node properties.
            pt_BR: Key-value pairs for end node properties.
            zh_Hans: Key-value pairs for end node properties.
          label:
            en_US: End Node Properties (JSON)
            ja_JP: End Node Properties (JSON)
            pt_BR: End Node Properties (JSON)
            zh_Hans: End Node Properties (JSON)
          llm_description: JSON object with key-value pairs for end node properties.
          max: null
          min: null
          name: end_node_properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The type of relationship to create.
            ja_JP: The type of relationship to create.
            pt_BR: The type of relationship to create.
            zh_Hans: The type of relationship to create.
          label:
            en_US: Relationship Type
            ja_JP: Relationship Type
            pt_BR: Relationship Type
            zh_Hans: Relationship Type
          llm_description: The type of relationship to create.
          max: null
          min: null
          name: relationship_type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for updating node properties or a string for updating
              relationship.
            ja_JP: Key-value pairs for updating node properties or a string for updating
              relationship.
            pt_BR: Key-value pairs for updating node properties or a string for updating
              relationship.
            zh_Hans: Key-value pairs for updating node properties or a string for
              updating relationship.
          label:
            en_US: Update Properties (JSON) or Relationship (str)
            ja_JP: Update Properties (JSON) or Relationship (str)
            pt_BR: Update Properties (JSON) or Relationship (str)
            zh_Hans: Update Properties (JSON) or Relationship (str)
          llm_description: JSON object with key-value pairs used to update properties
            or a string for updating relationship. .
          max: null
          min: null
          name: update_parameter
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: A custom Cypher query to be executed directly.
            ja_JP: A custom Cypher query to be executed directly.
            pt_BR: A custom Cypher query to be executed directly.
            zh_Hans: A custom Cypher query to be executed directly.
          label:
            en_US: Custom Query (for advanced users)
            ja_JP: Custom Query (for advanced users)
            pt_BR: Custom Query (for advanced users)
            zh_Hans: Custom Query (for advanced users)
          llm_description: A custom Cypher query to be executed directly.
          max: null
          min: null
          name: query
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        params:
          end_node_label: ''
          end_node_properties: ''
          node_label: ''
          operation: ''
          properties: ''
          query: ''
          relationship_type: ''
          update_parameter: ''
        provider_id: jerry_aa/neo4j/neo4j
        provider_name: jerry_aa/neo4j/neo4j
        provider_type: builtin
        selected: false
        title: Author Info
        tool_configurations: {}
        tool_label: neo4j
        tool_name: neo4j
        tool_parameters:
          operation:
            type: constant
            value: read
          query:
            type: mixed
            value: "MATCH (p:Research_Paper {title: \"{{#1740502452418.Title#}}\"\
              })-[:WRITTEN_BY]->(a:Author)\nWITH COUNT(DISTINCT a) AS Total_Authors,\
              \ \n     collect({name: a.name, affiliation: a.affiliation}) AS Authors\n\
              RETURN Total_Authors, Authors"
        type: tool
      height: 54
      id: '17414156283300'
      position:
        x: 5639.28476944631
        y: 1540.3177999070679
      positionAbsolute:
        x: 5639.28476944631
        y: 1540.3177999070679
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        selected: false
        template: New Chat
        title: Template 4
        type: template-transform
        variables: []
      height: 54
      id: '1741501072942'
      position:
        x: 1048.7439113396906
        y: -480.4053206060205
      positionAbsolute:
        x: 1048.7439113396906
        y: -480.4053206060205
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        author: jerryakporDify
        desc: ''
        height: 775
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":1,"mode":"normal","style":"font-size:
          16px;","text":"Query Processor","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":1,"textStyle":"font-size:
          16px;"},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"The
          Query Processor Block handles user queries by first generating a Cypher
          query based on the input request and the absence of prior chat history.
          ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"This
          generated query is then executed against the Neo4j database, retrieving
          relevant structured data. Once the results are obtained, they are passed
          ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"through
          an LLM, which interprets and transforms them into a natural language response.
          This ensures that users receive clear, human-readable answers ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"rather
          than raw database outputs, making the research exploration process more
          intuitive and user-friendly.","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ''
        type: ''
        width: 2315
      height: 775
      id: '1741552550457'
      position:
        x: 834.6963061922888
        y: 1973.2526000011849
      positionAbsolute:
        x: 834.6963061922888
        y: 1973.2526000011849
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 2315
    - data:
        desc: Perform  A Search for the reference paper to get the top 5 results
        isInIteration: true
        is_team_authorization: true
        iteration_id: '1740526532426'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Select the type of search.
            ja_JP: Select the type of search.
            pt_BR: Select the type of search.
            zh_Hans: Select the type of search.
          label:
            en_US: Search Type
            ja_JP: Search Type
            pt_BR: Search Type
            zh_Hans: Search Type
          llm_description: Choose between searching research papers, authors, or by
            filters.
          max: null
          min: null
          name: search_type
          options:
          - label:
              en_US: Search Research Papers (Works)
              ja_JP: Search Research Papers (Works)
              pt_BR: Search Research Papers (Works)
              zh_Hans: Search Research Papers (Works)
            value: search_works
          - label:
              en_US: Search Research Papers by Filter
              ja_JP: Search Research Papers by Filter
              pt_BR: Search Research Papers by Filter
              zh_Hans: Search Research Papers by Filter
            value: search_works_filter
          - label:
              en_US: Search Authors
              ja_JP: Search Authors
              pt_BR: Search Authors
              zh_Hans: Search Authors
            value: search_authors
          - label:
              en_US: Get Author by ID
              ja_JP: Get Author by ID
              pt_BR: Get Author by ID
              zh_Hans: Get Author by ID
            value: get_author_by_id
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Enter a search term, author name, author id (eg. A5012276327) or
              filter parameter (eg. author.id:A5023448834).
            ja_JP: Enter a search term, author name, author id (eg. A5012276327) or
              filter parameter (eg. author.id:A5023448834).
            pt_BR: Enter a search term, author name, author id (eg. A5012276327) or
              filter parameter (eg. author.id:A5023448834).
            zh_Hans: Enter a search term, author name, author id (eg. A5012276327)
              or filter parameter (eg. author.id:A5023448834).
          label:
            en_US: Query
            ja_JP: Query
            pt_BR: Query
            zh_Hans: Query
          llm_description: Provide a query to search OpenAlex based on the selected
            type.
          max: null
          min: null
          name: query
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: 10
          form: llm
          human_description:
            en_US: Number of results per page.
            ja_JP: Number of results per page.
            pt_BR: Number of results per page.
            zh_Hans: Number of results per page.
          label:
            en_US: Results per page
            ja_JP: Results per page
            pt_BR: Results per page
            zh_Hans: Results per page
          llm_description: ''
          max: 200
          min: null
          name: per_page
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: 1
          form: llm
          human_description:
            en_US: Page number for paginated results.
            ja_JP: Page number for paginated results.
            pt_BR: Page number for paginated results.
            zh_Hans: Page number for paginated results.
          label:
            en_US: Page Number
            ja_JP: Page Number
            pt_BR: Page Number
            zh_Hans: Page Number
          llm_description: ''
          max: null
          min: null
          name: page
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: number
        params:
          page: ''
          per_page: ''
          query: ''
          search_type: ''
        provider_id: jerry_aa/open_alex/open_alex
        provider_name: jerry_aa/open_alex/open_alex
        provider_type: builtin
        selected: false
        title: open_alex
        tool_configurations: {}
        tool_label: open_alex
        tool_name: open_alex
        tool_parameters:
          page:
            type: constant
            value: 1
          per_page:
            type: constant
            value: 5
          query:
            type: mixed
            value: '{{#1740526583162.Title#}}'
          search_type:
            type: constant
            value: search_works
        type: tool
      height: 98
      id: '1741679779860'
      parentId: '1740526532426'
      position:
        x: 471.2641234066932
        y: 103.0438125087096
      positionAbsolute:
        x: 2366.4282927118156
        y: 1512.0339289443446
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "import json\n\ndef extract_abstract(abstract_index: dict) -> str:\n\
          \    \"\"\"\n    Reconstructs the abstract from OpenAlex's abstract_inverted_index.\n\
          \    \n    :param abstract_index: JSON object containing OpenAlex work details.\n\
          \    :return: Reconstructed abstract as a string.\n    \"\"\"\n    if not\
          \ abstract_index:\n        return \"Abstract not available.\"\n\n    # Create\
          \ a list to store words in correct order\n    max_position = max(pos for\
          \ positions in abstract_index.values() for pos in positions)\n    abstract_words\
          \ = [\"\"] * (max_position + 1)\n\n    for word, positions in abstract_index.items():\n\
          \        for pos in positions:\n            abstract_words[pos] = word\n\
          \n    return \" \".join(abstract_words)\n\ndef extract_correct_paper(api_response,\
          \ original_title):\n    \n    \n\n    # Check if the response contains results\n\
          \    if \"results\" not in api_response or not api_response[\"results\"\
          ]:\n        return {}\n\n    # Normalize the original title for case-insensitive\
          \ comparison\n    normalized_title = original_title.strip().lower()\n\n\
          \    # List to store matched papers\n    matched_papers = []\n\n    # Loop\
          \ through results to find the exact title match\n    for paper in api_response[\"\
          results\"]:\n        if \"title\" in paper and paper[\"title\"].strip().lower()\
          \ == normalized_title:\n            matched_papers.append(paper)\n\n   \
          \ # If multiple matches exist, choose the one with the highest relevance_score\n\
          \    if matched_papers:\n        best_match = max(matched_papers, key=lambda\
          \ x: x.get(\"relevance_score\", 0))\n        return  best_match\n\n    #\
          \ If no exact match is found, return an empty dictionary\n    return {}\n\
          \ndef extract_graph_metadata(paper_metadata):\n    \"\"\"\n    Extracts\
          \ necessary properties for Research_Paper, Source, Concept Nodes, and Topic\
          \ Nodes.\n\n    :param paper_metadata: Dictionary containing paper details\n\
          \    :return: Dictionary with extracted metadata\n    \"\"\"\n    # Extract\
          \ Research Paper details\n    research_paper = {\n        \"id\": paper_metadata.get(\"\
          id\", \"\"),\n        \"doi\": paper_metadata.get(\"doi\", \"\"),\n    \
          \    \"title\": paper_metadata.get(\"title\", \"\"),\n        \"publication_year\"\
          : paper_metadata.get(\"publication_year\", \"\"),\n        \"publication_date\"\
          : paper_metadata.get(\"publication_date\", \"\"),\n        \"language\"\
          : paper_metadata.get(\"language\", \"\"),\n        \"open_access_status\"\
          : paper_metadata.get(\"open_access\", {}).get(\"oa_status\", \"\"),\n  \
          \      \"cited_by_count\": paper_metadata.get(\"cited_by_count\", 0),\n\
          \        \"authors\": \", \".join([author[\"author\"][\"display_name\"]\
          \ for author in paper_metadata.get(\"authorships\", []) if \"author\" in\
          \ author]),\n        \"summary\": extract_abstract(paper_metadata.get(\"\
          abstract_inverted_index\", {}))\n    }\n\n    \n    return str(research_paper)\n\
          \n\ndef main(api_response: dict, original_title:str) -> dict:\n    filtered_metadata\
          \ = extract_correct_paper(api_response[0], original_title)\n    paper =\
          \ {\n        \"Reference_Paper\": \"{}\"\n    }\n    if filtered_metadata\
          \ or filtered_metadata != {}:\n        paper[\"Reference_Paper\"] = extract_graph_metadata(filtered_metadata)\n\
          \    return paper\n"
        code_language: python3
        desc: Used to extract the meta date of the reference Paper
        isInIteration: true
        iteration_id: '1740526532426'
        outputs:
          Reference_Paper:
            children: null
            type: string
        selected: false
        title: Extract Meta data
        type: code
        variables:
        - value_selector:
          - '1740526583162'
          - Title
          variable: original_title
        - value_selector:
          - '1741679779860'
          - json
          variable: api_response
      height: 98
      id: '1741682372317'
      parentId: '1740526532426'
      position:
        x: 926.7033595912048
        y: 108.84002651081278
      positionAbsolute:
        x: 2821.8675288963273
        y: 1517.8301429464477
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Select the type of search.
            ja_JP: Select the type of search.
            pt_BR: Select the type of search.
            zh_Hans: Select the type of search.
          label:
            en_US: Search Type
            ja_JP: Search Type
            pt_BR: Search Type
            zh_Hans: Search Type
          llm_description: Choose between searching research papers, authors, or by
            filters.
          max: null
          min: null
          name: search_type
          options:
          - label:
              en_US: Search Research Papers (Works)
              ja_JP: Search Research Papers (Works)
              pt_BR: Search Research Papers (Works)
              zh_Hans: Search Research Papers (Works)
            value: search_works
          - label:
              en_US: Search Research Papers by Filter
              ja_JP: Search Research Papers by Filter
              pt_BR: Search Research Papers by Filter
              zh_Hans: Search Research Papers by Filter
            value: search_works_filter
          - label:
              en_US: Search Authors
              ja_JP: Search Authors
              pt_BR: Search Authors
              zh_Hans: Search Authors
            value: search_authors
          - label:
              en_US: Get Author by ID
              ja_JP: Get Author by ID
              pt_BR: Get Author by ID
              zh_Hans: Get Author by ID
            value: get_author_by_id
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Enter a search term, author name, author id (eg. A5012276327) or
              filter parameter (eg. author.id:A5023448834).
            ja_JP: Enter a search term, author name, author id (eg. A5012276327) or
              filter parameter (eg. author.id:A5023448834).
            pt_BR: Enter a search term, author name, author id (eg. A5012276327) or
              filter parameter (eg. author.id:A5023448834).
            zh_Hans: Enter a search term, author name, author id (eg. A5012276327)
              or filter parameter (eg. author.id:A5023448834).
          label:
            en_US: Query
            ja_JP: Query
            pt_BR: Query
            zh_Hans: Query
          llm_description: Provide a query to search OpenAlex based on the selected
            type.
          max: null
          min: null
          name: query
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: 10
          form: llm
          human_description:
            en_US: Number of results per page.
            ja_JP: Number of results per page.
            pt_BR: Number of results per page.
            zh_Hans: Number of results per page.
          label:
            en_US: Results per page
            ja_JP: Results per page
            pt_BR: Results per page
            zh_Hans: Results per page
          llm_description: ''
          max: 200
          min: null
          name: per_page
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: 1
          form: llm
          human_description:
            en_US: Page number for paginated results.
            ja_JP: Page number for paginated results.
            pt_BR: Page number for paginated results.
            zh_Hans: Page number for paginated results.
          label:
            en_US: Page Number
            ja_JP: Page Number
            pt_BR: Page Number
            zh_Hans: Page Number
          llm_description: ''
          max: null
          min: null
          name: page
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: number
        params:
          page: ''
          per_page: ''
          query: ''
          search_type: ''
        provider_id: jerry_aa/open_alex/open_alex
        provider_name: jerry_aa/open_alex/open_alex
        provider_type: builtin
        selected: false
        title: open_alex
        tool_configurations: {}
        tool_label: open_alex
        tool_name: open_alex
        tool_parameters:
          page:
            type: constant
            value: 1
          per_page:
            type: constant
            value: 5
          query:
            type: mixed
            value: '{{#1740502452418.Title#}}'
          search_type:
            type: constant
            value: search_works
        type: tool
      height: 54
      id: '1741701423063'
      position:
        x: 2910.1321441267996
        y: 790.2683545317593
      positionAbsolute:
        x: 2910.1321441267996
        y: 790.2683545317593
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: create reletionship between paper and source
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            ja_JP: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            pt_BR: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            zh_Hans: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
          label:
            en_US: Operation Type
            ja_JP: Operation Type
            pt_BR: Operation Type
            zh_Hans: Operation Type
          llm_description: Choose whether to create, read, update, delete, or relate
            nodes.
          max: null
          min: null
          name: operation
          options:
          - label:
              en_US: Visualize Graph
              ja_JP: Visualize Graph
              pt_BR: Visualize Graph
              zh_Hans: Visualize Graph
            value: visualize_graph
          - label:
              en_US: Create Node
              ja_JP: Create Node
              pt_BR: Create Node
              zh_Hans: Create Node
            value: create
          - label:
              en_US: Read Data
              ja_JP: Read Data
              pt_BR: Read Data
              zh_Hans: Read Data
            value: read
          - label:
              en_US: Update Node
              ja_JP: Update Node
              pt_BR: Update Node
              zh_Hans: Update Node
            value: update
          - label:
              en_US: Delete Node
              ja_JP: Delete Node
              pt_BR: Delete Node
              zh_Hans: Delete Node
            value: delete
          - label:
              en_US: Delete All Node
              ja_JP: Delete All Node
              pt_BR: Delete All Node
              zh_Hans: Delete All Node
            value: delete_all
          - label:
              en_US: Create Relationship
              ja_JP: Create Relationship
              pt_BR: Create Relationship
              zh_Hans: Create Relationship
            value: create_relationship
          - label:
              en_US: Create Nodes with Relationship
              ja_JP: Create Nodes with Relationship
              pt_BR: Create Nodes with Relationship
              zh_Hans: Create Nodes with Relationship
            value: createNodesWithRelationship
          - label:
              en_US: Update Relationship
              ja_JP: Update Relationship
              pt_BR: Update Relationship
              zh_Hans: Update Relationship
            value: update_relationship
          - label:
              en_US: Delete Relationship
              ja_JP: Delete Relationship
              pt_BR: Delete Relationship
              zh_Hans: Delete Relationship
            value: delete_relationship
          - label:
              en_US: Delete Relationship Between Nodes
              ja_JP: Delete Relationship Between Nodes
              pt_BR: Delete Relationship Between Nodes
              zh_Hans: Delete Relationship Between Nodes
            value: delete_relationship_between_nodes
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the node to perform operations on.
            ja_JP: The label of the node to perform operations on.
            pt_BR: The label of the node to perform operations on.
            zh_Hans: The label of the node to perform operations on.
          label:
            en_US: Node Label (start node)
            ja_JP: Node Label (start node)
            pt_BR: Node Label (start node)
            zh_Hans: Node Label (start node)
          llm_description: The label of the node to perform operations on.
          max: null
          min: null
          name: node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for node properties.
            ja_JP: Key-value pairs for node properties.
            pt_BR: Key-value pairs for node properties.
            zh_Hans: Key-value pairs for node properties.
          label:
            en_US: Properties (JSON)
            ja_JP: Properties (JSON)
            pt_BR: Properties (JSON)
            zh_Hans: Properties (JSON)
          llm_description: JSON object with key-value pairs for properties.
          max: null
          min: null
          name: properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the end node to perform operations on.
            ja_JP: The label of the end node to perform operations on.
            pt_BR: The label of the end node to perform operations on.
            zh_Hans: The label of the end node to perform operations on.
          label:
            en_US: End Node Label
            ja_JP: End Node Label
            pt_BR: End Node Label
            zh_Hans: End Node Label
          llm_description: The label of the end node to perform operations on.
          max: null
          min: null
          name: end_node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for end node properties.
            ja_JP: Key-value pairs for end node properties.
            pt_BR: Key-value pairs for end node properties.
            zh_Hans: Key-value pairs for end node properties.
          label:
            en_US: End Node Properties (JSON)
            ja_JP: End Node Properties (JSON)
            pt_BR: End Node Properties (JSON)
            zh_Hans: End Node Properties (JSON)
          llm_description: JSON object with key-value pairs for end node properties.
          max: null
          min: null
          name: end_node_properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The type of relationship to create.
            ja_JP: The type of relationship to create.
            pt_BR: The type of relationship to create.
            zh_Hans: The type of relationship to create.
          label:
            en_US: Relationship Type
            ja_JP: Relationship Type
            pt_BR: Relationship Type
            zh_Hans: Relationship Type
          llm_description: The type of relationship to create.
          max: null
          min: null
          name: relationship_type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for updating node properties or a string for updating
              relationship.
            ja_JP: Key-value pairs for updating node properties or a string for updating
              relationship.
            pt_BR: Key-value pairs for updating node properties or a string for updating
              relationship.
            zh_Hans: Key-value pairs for updating node properties or a string for
              updating relationship.
          label:
            en_US: Update Properties (JSON) or Relationship (str)
            ja_JP: Update Properties (JSON) or Relationship (str)
            pt_BR: Update Properties (JSON) or Relationship (str)
            zh_Hans: Update Properties (JSON) or Relationship (str)
          llm_description: JSON object with key-value pairs used to update properties
            or a string for updating relationship. .
          max: null
          min: null
          name: update_parameter
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: A custom Cypher query to be executed directly.
            ja_JP: A custom Cypher query to be executed directly.
            pt_BR: A custom Cypher query to be executed directly.
            zh_Hans: A custom Cypher query to be executed directly.
          label:
            en_US: Custom Query (for advanced users)
            ja_JP: Custom Query (for advanced users)
            pt_BR: Custom Query (for advanced users)
            zh_Hans: Custom Query (for advanced users)
          llm_description: A custom Cypher query to be executed directly.
          max: null
          min: null
          name: query
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        params:
          end_node_label: ''
          end_node_properties: ''
          node_label: ''
          operation: ''
          properties: ''
          query: ''
          relationship_type: ''
          update_parameter: ''
        provider_id: jerry_aa/neo4j/neo4j
        provider_name: jerry_aa/neo4j/neo4j
        provider_type: builtin
        selected: false
        title: Paper & Source
        tool_configurations: {}
        tool_label: neo4j
        tool_name: neo4j
        tool_parameters:
          end_node_label:
            type: mixed
            value: Source
          end_node_properties:
            type: mixed
            value: '{{#17417182251300.Source#}}'
          node_label:
            type: mixed
            value: Research_Paper
          operation:
            type: constant
            value: createNodesWithRelationship
          properties:
            type: mixed
            value: '{{#17417182251300.Research_Paper#}}'
          relationship_type:
            type: mixed
            value: PUBLISHED_IN
        type: tool
      height: 98
      id: '1741703889325'
      position:
        x: 3700.4021089711764
        y: 929.0447428421501
      positionAbsolute:
        x: 3700.4021089711764
        y: 929.0447428421501
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        error_handle_mode: terminated
        height: 207
        is_parallel: false
        iterator_selector:
        - '17417182251300'
        - Topics
        output_selector:
        - '1741704822247'
        - text
        output_type: array[string]
        parallel_nums: 10
        selected: false
        start_node_id: 1741704809609start
        title: Paper & Topics
        type: iteration
        width: 707
      height: 207
      id: '1741704809609'
      position:
        x: 3695.001802902626
        y: 1137.350327909141
      positionAbsolute:
        x: 3695.001802902626
        y: 1137.350327909141
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 707
      zIndex: 1
    - data:
        desc: ''
        isInIteration: true
        selected: false
        title: ''
        type: iteration-start
      draggable: false
      height: 48
      id: 1741704809609start
      parentId: '1741704809609'
      position:
        x: 24
        y: 68
      positionAbsolute:
        x: 3719.001802902626
        y: 1205.350327909141
      selectable: false
      sourcePosition: right
      targetPosition: left
      type: custom-iteration-start
      width: 44
      zIndex: 1002
    - data:
        desc: create relationship between Paper and Topic
        isInIteration: true
        isInLoop: false
        is_team_authorization: true
        iteration_id: '1741704809609'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            ja_JP: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            pt_BR: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            zh_Hans: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
          label:
            en_US: Operation Type
            ja_JP: Operation Type
            pt_BR: Operation Type
            zh_Hans: Operation Type
          llm_description: Choose whether to create, read, update, delete, or relate
            nodes.
          max: null
          min: null
          name: operation
          options:
          - label:
              en_US: Visualize Graph
              ja_JP: Visualize Graph
              pt_BR: Visualize Graph
              zh_Hans: Visualize Graph
            value: visualize_graph
          - label:
              en_US: Create Node
              ja_JP: Create Node
              pt_BR: Create Node
              zh_Hans: Create Node
            value: create
          - label:
              en_US: Read Data
              ja_JP: Read Data
              pt_BR: Read Data
              zh_Hans: Read Data
            value: read
          - label:
              en_US: Update Node
              ja_JP: Update Node
              pt_BR: Update Node
              zh_Hans: Update Node
            value: update
          - label:
              en_US: Delete Node
              ja_JP: Delete Node
              pt_BR: Delete Node
              zh_Hans: Delete Node
            value: delete
          - label:
              en_US: Delete All Node
              ja_JP: Delete All Node
              pt_BR: Delete All Node
              zh_Hans: Delete All Node
            value: delete_all
          - label:
              en_US: Create Relationship
              ja_JP: Create Relationship
              pt_BR: Create Relationship
              zh_Hans: Create Relationship
            value: create_relationship
          - label:
              en_US: Create Nodes with Relationship
              ja_JP: Create Nodes with Relationship
              pt_BR: Create Nodes with Relationship
              zh_Hans: Create Nodes with Relationship
            value: createNodesWithRelationship
          - label:
              en_US: Update Relationship
              ja_JP: Update Relationship
              pt_BR: Update Relationship
              zh_Hans: Update Relationship
            value: update_relationship
          - label:
              en_US: Delete Relationship
              ja_JP: Delete Relationship
              pt_BR: Delete Relationship
              zh_Hans: Delete Relationship
            value: delete_relationship
          - label:
              en_US: Delete Relationship Between Nodes
              ja_JP: Delete Relationship Between Nodes
              pt_BR: Delete Relationship Between Nodes
              zh_Hans: Delete Relationship Between Nodes
            value: delete_relationship_between_nodes
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the node to perform operations on.
            ja_JP: The label of the node to perform operations on.
            pt_BR: The label of the node to perform operations on.
            zh_Hans: The label of the node to perform operations on.
          label:
            en_US: Node Label (start node)
            ja_JP: Node Label (start node)
            pt_BR: Node Label (start node)
            zh_Hans: Node Label (start node)
          llm_description: The label of the node to perform operations on.
          max: null
          min: null
          name: node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for node properties.
            ja_JP: Key-value pairs for node properties.
            pt_BR: Key-value pairs for node properties.
            zh_Hans: Key-value pairs for node properties.
          label:
            en_US: Properties (JSON)
            ja_JP: Properties (JSON)
            pt_BR: Properties (JSON)
            zh_Hans: Properties (JSON)
          llm_description: JSON object with key-value pairs for properties.
          max: null
          min: null
          name: properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the end node to perform operations on.
            ja_JP: The label of the end node to perform operations on.
            pt_BR: The label of the end node to perform operations on.
            zh_Hans: The label of the end node to perform operations on.
          label:
            en_US: End Node Label
            ja_JP: End Node Label
            pt_BR: End Node Label
            zh_Hans: End Node Label
          llm_description: The label of the end node to perform operations on.
          max: null
          min: null
          name: end_node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for end node properties.
            ja_JP: Key-value pairs for end node properties.
            pt_BR: Key-value pairs for end node properties.
            zh_Hans: Key-value pairs for end node properties.
          label:
            en_US: End Node Properties (JSON)
            ja_JP: End Node Properties (JSON)
            pt_BR: End Node Properties (JSON)
            zh_Hans: End Node Properties (JSON)
          llm_description: JSON object with key-value pairs for end node properties.
          max: null
          min: null
          name: end_node_properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The type of relationship to create.
            ja_JP: The type of relationship to create.
            pt_BR: The type of relationship to create.
            zh_Hans: The type of relationship to create.
          label:
            en_US: Relationship Type
            ja_JP: Relationship Type
            pt_BR: Relationship Type
            zh_Hans: Relationship Type
          llm_description: The type of relationship to create.
          max: null
          min: null
          name: relationship_type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for updating node properties or a string for updating
              relationship.
            ja_JP: Key-value pairs for updating node properties or a string for updating
              relationship.
            pt_BR: Key-value pairs for updating node properties or a string for updating
              relationship.
            zh_Hans: Key-value pairs for updating node properties or a string for
              updating relationship.
          label:
            en_US: Update Properties (JSON) or Relationship (str)
            ja_JP: Update Properties (JSON) or Relationship (str)
            pt_BR: Update Properties (JSON) or Relationship (str)
            zh_Hans: Update Properties (JSON) or Relationship (str)
          llm_description: JSON object with key-value pairs used to update properties
            or a string for updating relationship. .
          max: null
          min: null
          name: update_parameter
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: A custom Cypher query to be executed directly.
            ja_JP: A custom Cypher query to be executed directly.
            pt_BR: A custom Cypher query to be executed directly.
            zh_Hans: A custom Cypher query to be executed directly.
          label:
            en_US: Custom Query (for advanced users)
            ja_JP: Custom Query (for advanced users)
            pt_BR: Custom Query (for advanced users)
            zh_Hans: Custom Query (for advanced users)
          llm_description: A custom Cypher query to be executed directly.
          max: null
          min: null
          name: query
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        params:
          end_node_label: ''
          end_node_properties: ''
          node_label: ''
          operation: ''
          properties: ''
          query: ''
          relationship_type: ''
          update_parameter: ''
        provider_id: jerry_aa/neo4j/neo4j
        provider_name: jerry_aa/neo4j/neo4j
        provider_type: builtin
        selected: false
        title: BELONGS_TO
        tool_configurations: {}
        tool_label: neo4j
        tool_name: neo4j
        tool_parameters:
          end_node_label:
            type: mixed
            value: Topic
          end_node_properties:
            type: mixed
            value: '{{#1741705245901.output#}}'
          node_label:
            type: mixed
            value: Research_Paper
          operation:
            type: constant
            value: createNodesWithRelationship
          properties:
            type: mixed
            value: '{{#17417182251300.Research_Paper#}}'
          relationship_type:
            type: mixed
            value: BELONGS_TO
        type: tool
      height: 98
      id: '1741704822247'
      parentId: '1741704809609'
      position:
        x: 404.4795033611517
        y: 59.862870292721254
      positionAbsolute:
        x: 4099.481306263778
        y: 1197.2131982018623
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: create relationship between Paper and Concepts
        error_handle_mode: terminated
        height: 178
        is_parallel: false
        iterator_selector:
        - '17417182251300'
        - Concepts
        output_selector:
        - '1741704837010017417048370110'
        - text
        output_type: array[string]
        parallel_nums: 10
        selected: false
        start_node_id: 1741704837010start
        title: Paper & Concepts
        type: iteration
        width: 692
      height: 178
      id: '17417048370100'
      position:
        x: 3700.4021089711764
        y: 1393.447147186689
      positionAbsolute:
        x: 3700.4021089711764
        y: 1393.447147186689
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 692
      zIndex: 1
    - data:
        desc: create relationship between Paper and Concepts
        isInIteration: true
        isInLoop: false
        is_team_authorization: true
        iteration_id: '17417048370100'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            ja_JP: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            pt_BR: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            zh_Hans: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
          label:
            en_US: Operation Type
            ja_JP: Operation Type
            pt_BR: Operation Type
            zh_Hans: Operation Type
          llm_description: Choose whether to create, read, update, delete, or relate
            nodes.
          max: null
          min: null
          name: operation
          options:
          - label:
              en_US: Visualize Graph
              ja_JP: Visualize Graph
              pt_BR: Visualize Graph
              zh_Hans: Visualize Graph
            value: visualize_graph
          - label:
              en_US: Create Node
              ja_JP: Create Node
              pt_BR: Create Node
              zh_Hans: Create Node
            value: create
          - label:
              en_US: Read Data
              ja_JP: Read Data
              pt_BR: Read Data
              zh_Hans: Read Data
            value: read
          - label:
              en_US: Update Node
              ja_JP: Update Node
              pt_BR: Update Node
              zh_Hans: Update Node
            value: update
          - label:
              en_US: Delete Node
              ja_JP: Delete Node
              pt_BR: Delete Node
              zh_Hans: Delete Node
            value: delete
          - label:
              en_US: Delete All Node
              ja_JP: Delete All Node
              pt_BR: Delete All Node
              zh_Hans: Delete All Node
            value: delete_all
          - label:
              en_US: Create Relationship
              ja_JP: Create Relationship
              pt_BR: Create Relationship
              zh_Hans: Create Relationship
            value: create_relationship
          - label:
              en_US: Create Nodes with Relationship
              ja_JP: Create Nodes with Relationship
              pt_BR: Create Nodes with Relationship
              zh_Hans: Create Nodes with Relationship
            value: createNodesWithRelationship
          - label:
              en_US: Update Relationship
              ja_JP: Update Relationship
              pt_BR: Update Relationship
              zh_Hans: Update Relationship
            value: update_relationship
          - label:
              en_US: Delete Relationship
              ja_JP: Delete Relationship
              pt_BR: Delete Relationship
              zh_Hans: Delete Relationship
            value: delete_relationship
          - label:
              en_US: Delete Relationship Between Nodes
              ja_JP: Delete Relationship Between Nodes
              pt_BR: Delete Relationship Between Nodes
              zh_Hans: Delete Relationship Between Nodes
            value: delete_relationship_between_nodes
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the node to perform operations on.
            ja_JP: The label of the node to perform operations on.
            pt_BR: The label of the node to perform operations on.
            zh_Hans: The label of the node to perform operations on.
          label:
            en_US: Node Label (start node)
            ja_JP: Node Label (start node)
            pt_BR: Node Label (start node)
            zh_Hans: Node Label (start node)
          llm_description: The label of the node to perform operations on.
          max: null
          min: null
          name: node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for node properties.
            ja_JP: Key-value pairs for node properties.
            pt_BR: Key-value pairs for node properties.
            zh_Hans: Key-value pairs for node properties.
          label:
            en_US: Properties (JSON)
            ja_JP: Properties (JSON)
            pt_BR: Properties (JSON)
            zh_Hans: Properties (JSON)
          llm_description: JSON object with key-value pairs for properties.
          max: null
          min: null
          name: properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the end node to perform operations on.
            ja_JP: The label of the end node to perform operations on.
            pt_BR: The label of the end node to perform operations on.
            zh_Hans: The label of the end node to perform operations on.
          label:
            en_US: End Node Label
            ja_JP: End Node Label
            pt_BR: End Node Label
            zh_Hans: End Node Label
          llm_description: The label of the end node to perform operations on.
          max: null
          min: null
          name: end_node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for end node properties.
            ja_JP: Key-value pairs for end node properties.
            pt_BR: Key-value pairs for end node properties.
            zh_Hans: Key-value pairs for end node properties.
          label:
            en_US: End Node Properties (JSON)
            ja_JP: End Node Properties (JSON)
            pt_BR: End Node Properties (JSON)
            zh_Hans: End Node Properties (JSON)
          llm_description: JSON object with key-value pairs for end node properties.
          max: null
          min: null
          name: end_node_properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The type of relationship to create.
            ja_JP: The type of relationship to create.
            pt_BR: The type of relationship to create.
            zh_Hans: The type of relationship to create.
          label:
            en_US: Relationship Type
            ja_JP: Relationship Type
            pt_BR: Relationship Type
            zh_Hans: Relationship Type
          llm_description: The type of relationship to create.
          max: null
          min: null
          name: relationship_type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for updating node properties or a string for updating
              relationship.
            ja_JP: Key-value pairs for updating node properties or a string for updating
              relationship.
            pt_BR: Key-value pairs for updating node properties or a string for updating
              relationship.
            zh_Hans: Key-value pairs for updating node properties or a string for
              updating relationship.
          label:
            en_US: Update Properties (JSON) or Relationship (str)
            ja_JP: Update Properties (JSON) or Relationship (str)
            pt_BR: Update Properties (JSON) or Relationship (str)
            zh_Hans: Update Properties (JSON) or Relationship (str)
          llm_description: JSON object with key-value pairs used to update properties
            or a string for updating relationship. .
          max: null
          min: null
          name: update_parameter
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: A custom Cypher query to be executed directly.
            ja_JP: A custom Cypher query to be executed directly.
            pt_BR: A custom Cypher query to be executed directly.
            zh_Hans: A custom Cypher query to be executed directly.
          label:
            en_US: Custom Query (for advanced users)
            ja_JP: Custom Query (for advanced users)
            pt_BR: Custom Query (for advanced users)
            zh_Hans: Custom Query (for advanced users)
          llm_description: A custom Cypher query to be executed directly.
          max: null
          min: null
          name: query
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        params:
          end_node_label: ''
          end_node_properties: ''
          node_label: ''
          operation: ''
          properties: ''
          query: ''
          relationship_type: ''
          update_parameter: ''
        provider_id: jerry_aa/neo4j/neo4j
        provider_name: jerry_aa/neo4j/neo4j
        provider_type: builtin
        selected: false
        title: CATEGORIZED_UNDER
        tool_configurations: {}
        tool_label: neo4j
        tool_name: neo4j
        tool_parameters:
          end_node_label:
            type: mixed
            value: Concept
          end_node_properties:
            type: mixed
            value: '{{#17417048370100.item#}}'
          node_label:
            type: mixed
            value: Research_Paper
          operation:
            type: constant
            value: createNodesWithRelationship
          properties:
            type: mixed
            value: '{{#17417182251300.Research_Paper#}}'
          relationship_type:
            type: mixed
            value: CATEGORIZED_UNDER
          update_parameter:
            type: mixed
            value: ''
        type: tool
      height: 98
      id: '1741704837010017417048370110'
      parentId: '17417048370100'
      position:
        x: 389.81147993917057
        y: 54.862870292721254
      positionAbsolute:
        x: 4090.213588910347
        y: 1448.3100174794104
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        selected: false
        title: ''
        type: iteration-start
      draggable: false
      height: 48
      id: 1741704837010start
      parentId: '17417048370100'
      position:
        x: 24
        y: 68
      positionAbsolute:
        x: 3724.4021089711764
        y: 1461.447147186689
      selectable: false
      sourcePosition: right
      targetPosition: left
      type: custom-iteration-start
      width: 44
      zIndex: 1002
    - data:
        desc: ''
        error_handle_mode: terminated
        height: 249
        is_parallel: false
        iterator_selector:
        - '17417182251300'
        - Author_IDs
        output_selector:
        - '1741704859343017417048593430'
        - text
        output_type: array[string]
        parallel_nums: 10
        selected: false
        start_node_id: 1741704859343start
        title: Paper & Authors
        type: iteration
        width: 947
      height: 249
      id: '17417048593430'
      position:
        x: 3695.001802902626
        y: 1595.5155028789957
      positionAbsolute:
        x: 3695.001802902626
        y: 1595.5155028789957
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 947
      zIndex: 1
    - data:
        desc: create relationship between Paper and Authors
        isInIteration: true
        isInLoop: false
        is_team_authorization: true
        iteration_id: '17417048593430'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            ja_JP: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            pt_BR: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            zh_Hans: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
          label:
            en_US: Operation Type
            ja_JP: Operation Type
            pt_BR: Operation Type
            zh_Hans: Operation Type
          llm_description: Choose whether to create, read, update, delete, or relate
            nodes.
          max: null
          min: null
          name: operation
          options:
          - label:
              en_US: Visualize Graph
              ja_JP: Visualize Graph
              pt_BR: Visualize Graph
              zh_Hans: Visualize Graph
            value: visualize_graph
          - label:
              en_US: Create Node
              ja_JP: Create Node
              pt_BR: Create Node
              zh_Hans: Create Node
            value: create
          - label:
              en_US: Read Data
              ja_JP: Read Data
              pt_BR: Read Data
              zh_Hans: Read Data
            value: read
          - label:
              en_US: Update Node
              ja_JP: Update Node
              pt_BR: Update Node
              zh_Hans: Update Node
            value: update
          - label:
              en_US: Delete Node
              ja_JP: Delete Node
              pt_BR: Delete Node
              zh_Hans: Delete Node
            value: delete
          - label:
              en_US: Delete All Node
              ja_JP: Delete All Node
              pt_BR: Delete All Node
              zh_Hans: Delete All Node
            value: delete_all
          - label:
              en_US: Create Relationship
              ja_JP: Create Relationship
              pt_BR: Create Relationship
              zh_Hans: Create Relationship
            value: create_relationship
          - label:
              en_US: Create Nodes with Relationship
              ja_JP: Create Nodes with Relationship
              pt_BR: Create Nodes with Relationship
              zh_Hans: Create Nodes with Relationship
            value: createNodesWithRelationship
          - label:
              en_US: Update Relationship
              ja_JP: Update Relationship
              pt_BR: Update Relationship
              zh_Hans: Update Relationship
            value: update_relationship
          - label:
              en_US: Delete Relationship
              ja_JP: Delete Relationship
              pt_BR: Delete Relationship
              zh_Hans: Delete Relationship
            value: delete_relationship
          - label:
              en_US: Delete Relationship Between Nodes
              ja_JP: Delete Relationship Between Nodes
              pt_BR: Delete Relationship Between Nodes
              zh_Hans: Delete Relationship Between Nodes
            value: delete_relationship_between_nodes
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the node to perform operations on.
            ja_JP: The label of the node to perform operations on.
            pt_BR: The label of the node to perform operations on.
            zh_Hans: The label of the node to perform operations on.
          label:
            en_US: Node Label (start node)
            ja_JP: Node Label (start node)
            pt_BR: Node Label (start node)
            zh_Hans: Node Label (start node)
          llm_description: The label of the node to perform operations on.
          max: null
          min: null
          name: node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for node properties.
            ja_JP: Key-value pairs for node properties.
            pt_BR: Key-value pairs for node properties.
            zh_Hans: Key-value pairs for node properties.
          label:
            en_US: Properties (JSON)
            ja_JP: Properties (JSON)
            pt_BR: Properties (JSON)
            zh_Hans: Properties (JSON)
          llm_description: JSON object with key-value pairs for properties.
          max: null
          min: null
          name: properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the end node to perform operations on.
            ja_JP: The label of the end node to perform operations on.
            pt_BR: The label of the end node to perform operations on.
            zh_Hans: The label of the end node to perform operations on.
          label:
            en_US: End Node Label
            ja_JP: End Node Label
            pt_BR: End Node Label
            zh_Hans: End Node Label
          llm_description: The label of the end node to perform operations on.
          max: null
          min: null
          name: end_node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for end node properties.
            ja_JP: Key-value pairs for end node properties.
            pt_BR: Key-value pairs for end node properties.
            zh_Hans: Key-value pairs for end node properties.
          label:
            en_US: End Node Properties (JSON)
            ja_JP: End Node Properties (JSON)
            pt_BR: End Node Properties (JSON)
            zh_Hans: End Node Properties (JSON)
          llm_description: JSON object with key-value pairs for end node properties.
          max: null
          min: null
          name: end_node_properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The type of relationship to create.
            ja_JP: The type of relationship to create.
            pt_BR: The type of relationship to create.
            zh_Hans: The type of relationship to create.
          label:
            en_US: Relationship Type
            ja_JP: Relationship Type
            pt_BR: Relationship Type
            zh_Hans: Relationship Type
          llm_description: The type of relationship to create.
          max: null
          min: null
          name: relationship_type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for updating node properties or a string for updating
              relationship.
            ja_JP: Key-value pairs for updating node properties or a string for updating
              relationship.
            pt_BR: Key-value pairs for updating node properties or a string for updating
              relationship.
            zh_Hans: Key-value pairs for updating node properties or a string for
              updating relationship.
          label:
            en_US: Update Properties (JSON) or Relationship (str)
            ja_JP: Update Properties (JSON) or Relationship (str)
            pt_BR: Update Properties (JSON) or Relationship (str)
            zh_Hans: Update Properties (JSON) or Relationship (str)
          llm_description: JSON object with key-value pairs used to update properties
            or a string for updating relationship. .
          max: null
          min: null
          name: update_parameter
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: A custom Cypher query to be executed directly.
            ja_JP: A custom Cypher query to be executed directly.
            pt_BR: A custom Cypher query to be executed directly.
            zh_Hans: A custom Cypher query to be executed directly.
          label:
            en_US: Custom Query (for advanced users)
            ja_JP: Custom Query (for advanced users)
            pt_BR: Custom Query (for advanced users)
            zh_Hans: Custom Query (for advanced users)
          llm_description: A custom Cypher query to be executed directly.
          max: null
          min: null
          name: query
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        params:
          end_node_label: ''
          end_node_properties: ''
          node_label: ''
          operation: ''
          properties: ''
          query: ''
          relationship_type: ''
          update_parameter: ''
        provider_id: jerry_aa/neo4j/neo4j
        provider_name: jerry_aa/neo4j/neo4j
        provider_type: builtin
        selected: false
        title: WRITTEN_BY
        tool_configurations: {}
        tool_label: neo4j
        tool_name: neo4j
        tool_parameters:
          end_node_label:
            type: mixed
            value: Author
          end_node_properties:
            type: mixed
            value: '{{#1741706250539.extracted_author#}}'
          node_label:
            type: mixed
            value: Research_Paper
          operation:
            type: constant
            value: createNodesWithRelationship
          properties:
            type: mixed
            value: '{{#17417182251300.Research_Paper#}}'
          relationship_type:
            type: mixed
            value: WRITTEN_BY
        type: tool
      height: 98
      id: '1741704859343017417048593430'
      parentId: '17417048593430'
      position:
        x: 687
        y: 65
      positionAbsolute:
        x: 4382.001802902626
        y: 1660.5155028789957
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        selected: false
        title: ''
        type: iteration-start
      draggable: false
      height: 48
      id: 1741704859343start
      parentId: '17417048593430'
      position:
        x: 24
        y: 68
      positionAbsolute:
        x: 3719.001802902626
        y: 1663.5155028789957
      selectable: false
      sourcePosition: right
      targetPosition: left
      type: custom-iteration-start
      width: 44
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        isInLoop: false
        iteration_id: '17417048370100'
        selected: false
        template: '{{ arg1 }}'
        title: concept to String
        type: template-transform
        variables:
        - value_selector:
          - '17417048370100'
          - item
          variable: arg1
      height: 54
      id: '1741705128137'
      parentId: '17417048370100'
      position:
        x: 99.89498286691924
        y: 60.622091864333015
      positionAbsolute:
        x: 3800.2970918380956
        y: 1454.0692390510221
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        isInLoop: false
        iteration_id: '1741704809609'
        selected: false
        template: '{{ arg1 }}'
        title: Topics to String
        type: template-transform
        variables:
        - value_selector:
          - '1741704809609'
          - item
          variable: arg1
      height: 54
      id: '1741705245901'
      parentId: '1741704809609'
      position:
        x: 119.04456314567597
        y: 59.862870292721254
      positionAbsolute:
        x: 3814.046366048302
        y: 1197.2131982018623
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        code: "def main(author_data: list) -> dict:\n    \"\"\"\n    Extracts the\
          \ top 5 most important properties for an author from OpenAlex metadata.\n\
          \    Ensures all values are returned as strings.\n\n    :param author_data:\
          \ JSON object containing author details.\n    :return: A dictionary containing\
          \ the extracted author information.\n    \"\"\"\n    # Extract affiliations\
          \ as a comma-separated string\n    author_data = author_data[0]\n    affiliations\
          \ = [\n        aff[\"institution\"][\"display_name\"]\n        for aff in\
          \ author_data.get(\"affiliations\", [])\n        if \"institution\" in aff\
          \ and \"display_name\" in aff[\"institution\"]\n    ]\n    affiliations_str\
          \ = \", \".join(affiliations) if affiliations else \"No affiliations available\"\
          \n\n    extracted_author = {\n        \"name\": str(author_data.get(\"display_name\"\
          , \"\")),\n        \"id\": str(author_data.get(\"id\", \"\")),\n       \
          \ \"works_count\": str(author_data.get(\"works_count\", 0)),\n        \"\
          cited_by_count\": str(author_data.get(\"cited_by_count\", 0)),\n       \
          \ \"affiliations\": affiliations_str\n    }\n\n    return {\"extracted_author\"\
          : str(extracted_author)}"
        code_language: python3
        desc: ''
        isInIteration: true
        isInLoop: false
        iteration_id: '17417048593430'
        outputs:
          extracted_author:
            children: null
            type: string
        selected: false
        title: Extract Author Metadata
        type: code
        variables:
        - value_selector:
          - '1741706318301'
          - json
          variable: author_data
      height: 54
      id: '1741706250539'
      parentId: '17417048593430'
      position:
        x: 380.85387233532856
        y: 59.862870292721254
      positionAbsolute:
        x: 4075.8556752379545
        y: 1655.378373171717
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        isInIteration: true
        isInLoop: false
        is_team_authorization: true
        iteration_id: '17417048593430'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Select the type of search.
            ja_JP: Select the type of search.
            pt_BR: Select the type of search.
            zh_Hans: Select the type of search.
          label:
            en_US: Search Type
            ja_JP: Search Type
            pt_BR: Search Type
            zh_Hans: Search Type
          llm_description: Choose between searching research papers, authors, or by
            filters.
          max: null
          min: null
          name: search_type
          options:
          - label:
              en_US: Search Research Papers (Works)
              ja_JP: Search Research Papers (Works)
              pt_BR: Search Research Papers (Works)
              zh_Hans: Search Research Papers (Works)
            value: search_works
          - label:
              en_US: Search Research Papers by Filter
              ja_JP: Search Research Papers by Filter
              pt_BR: Search Research Papers by Filter
              zh_Hans: Search Research Papers by Filter
            value: search_works_filter
          - label:
              en_US: Search Authors
              ja_JP: Search Authors
              pt_BR: Search Authors
              zh_Hans: Search Authors
            value: search_authors
          - label:
              en_US: Get Author by ID
              ja_JP: Get Author by ID
              pt_BR: Get Author by ID
              zh_Hans: Get Author by ID
            value: get_author_by_id
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Enter a search term, author name, author id (eg. A5012276327) or
              filter parameter (eg. author.id:A5023448834).
            ja_JP: Enter a search term, author name, author id (eg. A5012276327) or
              filter parameter (eg. author.id:A5023448834).
            pt_BR: Enter a search term, author name, author id (eg. A5012276327) or
              filter parameter (eg. author.id:A5023448834).
            zh_Hans: Enter a search term, author name, author id (eg. A5012276327)
              or filter parameter (eg. author.id:A5023448834).
          label:
            en_US: Query
            ja_JP: Query
            pt_BR: Query
            zh_Hans: Query
          llm_description: Provide a query to search OpenAlex based on the selected
            type.
          max: null
          min: null
          name: query
          options: []
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: 10
          form: llm
          human_description:
            en_US: Number of results per page.
            ja_JP: Number of results per page.
            pt_BR: Number of results per page.
            zh_Hans: Number of results per page.
          label:
            en_US: Results per page
            ja_JP: Results per page
            pt_BR: Results per page
            zh_Hans: Results per page
          llm_description: ''
          max: 200
          min: null
          name: per_page
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: number
        - auto_generate: null
          default: 1
          form: llm
          human_description:
            en_US: Page number for paginated results.
            ja_JP: Page number for paginated results.
            pt_BR: Page number for paginated results.
            zh_Hans: Page number for paginated results.
          label:
            en_US: Page Number
            ja_JP: Page Number
            pt_BR: Page Number
            zh_Hans: Page Number
          llm_description: ''
          max: null
          min: null
          name: page
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: number
        params:
          page: ''
          per_page: ''
          query: ''
          search_type: ''
        provider_id: jerry_aa/open_alex/open_alex
        provider_name: jerry_aa/open_alex/open_alex
        provider_type: builtin
        selected: false
        title: open_alex
        tool_configurations: {}
        tool_label: open_alex
        tool_name: open_alex
        tool_parameters:
          page:
            type: constant
            value: 1
          per_page:
            type: constant
            value: 1
          query:
            type: mixed
            value: '{{#17417048593430.item#}}'
          search_type:
            type: constant
            value: get_author_by_id
        type: tool
      height: 54
      id: '1741706318301'
      parentId: '17417048593430'
      position:
        x: 105.65883627832773
        y: 59.862870292721254
      positionAbsolute:
        x: 3800.6606391809537
        y: 1655.378373171717
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            ja_JP: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            pt_BR: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            zh_Hans: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
          label:
            en_US: Operation Type
            ja_JP: Operation Type
            pt_BR: Operation Type
            zh_Hans: Operation Type
          llm_description: Choose whether to create, read, update, delete, or relate
            nodes.
          max: null
          min: null
          name: operation
          options:
          - label:
              en_US: Visualize Graph
              ja_JP: Visualize Graph
              pt_BR: Visualize Graph
              zh_Hans: Visualize Graph
            value: visualize_graph
          - label:
              en_US: Create Node
              ja_JP: Create Node
              pt_BR: Create Node
              zh_Hans: Create Node
            value: create
          - label:
              en_US: Read Data
              ja_JP: Read Data
              pt_BR: Read Data
              zh_Hans: Read Data
            value: read
          - label:
              en_US: Update Node
              ja_JP: Update Node
              pt_BR: Update Node
              zh_Hans: Update Node
            value: update
          - label:
              en_US: Delete Node
              ja_JP: Delete Node
              pt_BR: Delete Node
              zh_Hans: Delete Node
            value: delete
          - label:
              en_US: Delete All Node
              ja_JP: Delete All Node
              pt_BR: Delete All Node
              zh_Hans: Delete All Node
            value: delete_all
          - label:
              en_US: Create Relationship
              ja_JP: Create Relationship
              pt_BR: Create Relationship
              zh_Hans: Create Relationship
            value: create_relationship
          - label:
              en_US: Create Nodes with Relationship
              ja_JP: Create Nodes with Relationship
              pt_BR: Create Nodes with Relationship
              zh_Hans: Create Nodes with Relationship
            value: createNodesWithRelationship
          - label:
              en_US: Update Relationship
              ja_JP: Update Relationship
              pt_BR: Update Relationship
              zh_Hans: Update Relationship
            value: update_relationship
          - label:
              en_US: Delete Relationship
              ja_JP: Delete Relationship
              pt_BR: Delete Relationship
              zh_Hans: Delete Relationship
            value: delete_relationship
          - label:
              en_US: Delete Relationship Between Nodes
              ja_JP: Delete Relationship Between Nodes
              pt_BR: Delete Relationship Between Nodes
              zh_Hans: Delete Relationship Between Nodes
            value: delete_relationship_between_nodes
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the node to perform operations on.
            ja_JP: The label of the node to perform operations on.
            pt_BR: The label of the node to perform operations on.
            zh_Hans: The label of the node to perform operations on.
          label:
            en_US: Node Label (start node)
            ja_JP: Node Label (start node)
            pt_BR: Node Label (start node)
            zh_Hans: Node Label (start node)
          llm_description: The label of the node to perform operations on.
          max: null
          min: null
          name: node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for node properties.
            ja_JP: Key-value pairs for node properties.
            pt_BR: Key-value pairs for node properties.
            zh_Hans: Key-value pairs for node properties.
          label:
            en_US: Properties (JSON)
            ja_JP: Properties (JSON)
            pt_BR: Properties (JSON)
            zh_Hans: Properties (JSON)
          llm_description: JSON object with key-value pairs for properties.
          max: null
          min: null
          name: properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the end node to perform operations on.
            ja_JP: The label of the end node to perform operations on.
            pt_BR: The label of the end node to perform operations on.
            zh_Hans: The label of the end node to perform operations on.
          label:
            en_US: End Node Label
            ja_JP: End Node Label
            pt_BR: End Node Label
            zh_Hans: End Node Label
          llm_description: The label of the end node to perform operations on.
          max: null
          min: null
          name: end_node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for end node properties.
            ja_JP: Key-value pairs for end node properties.
            pt_BR: Key-value pairs for end node properties.
            zh_Hans: Key-value pairs for end node properties.
          label:
            en_US: End Node Properties (JSON)
            ja_JP: End Node Properties (JSON)
            pt_BR: End Node Properties (JSON)
            zh_Hans: End Node Properties (JSON)
          llm_description: JSON object with key-value pairs for end node properties.
          max: null
          min: null
          name: end_node_properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The type of relationship to create.
            ja_JP: The type of relationship to create.
            pt_BR: The type of relationship to create.
            zh_Hans: The type of relationship to create.
          label:
            en_US: Relationship Type
            ja_JP: Relationship Type
            pt_BR: Relationship Type
            zh_Hans: Relationship Type
          llm_description: The type of relationship to create.
          max: null
          min: null
          name: relationship_type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for updating node properties or a string for updating
              relationship.
            ja_JP: Key-value pairs for updating node properties or a string for updating
              relationship.
            pt_BR: Key-value pairs for updating node properties or a string for updating
              relationship.
            zh_Hans: Key-value pairs for updating node properties or a string for
              updating relationship.
          label:
            en_US: Update Properties (JSON) or Relationship (str)
            ja_JP: Update Properties (JSON) or Relationship (str)
            pt_BR: Update Properties (JSON) or Relationship (str)
            zh_Hans: Update Properties (JSON) or Relationship (str)
          llm_description: JSON object with key-value pairs used to update properties
            or a string for updating relationship. .
          max: null
          min: null
          name: update_parameter
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: A custom Cypher query to be executed directly.
            ja_JP: A custom Cypher query to be executed directly.
            pt_BR: A custom Cypher query to be executed directly.
            zh_Hans: A custom Cypher query to be executed directly.
          label:
            en_US: Custom Query (for advanced users)
            ja_JP: Custom Query (for advanced users)
            pt_BR: Custom Query (for advanced users)
            zh_Hans: Custom Query (for advanced users)
          llm_description: A custom Cypher query to be executed directly.
          max: null
          min: null
          name: query
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        params:
          end_node_label: ''
          end_node_properties: ''
          node_label: ''
          operation: ''
          properties: ''
          query: ''
          relationship_type: ''
          update_parameter: ''
        provider_id: jerry_aa/neo4j/neo4j
        provider_name: jerry_aa/neo4j/neo4j
        provider_type: builtin
        selected: false
        title: Topic Info
        tool_configurations: {}
        tool_label: neo4j
        tool_name: neo4j
        tool_parameters:
          operation:
            type: constant
            value: visualize_graph
          query:
            type: mixed
            value: "MATCH (p:Research_Paper {title: \"{{#1740502452418.Title#}}\"\
              })-[:BELONGS_TO]->(t:Topic)\nWITH COUNT(DISTINCT t) AS Total_Topics,\
              \ \n     collect({name: t.name}) AS Topics\nRETURN Total_Topics, Topics\n"
        type: tool
      height: 54
      id: '1741709809655'
      position:
        x: 5639.28476944631
        y: 1832.3223719783864
      positionAbsolute:
        x: 5639.28476944631
        y: 1832.3223719783864
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            ja_JP: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            pt_BR: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            zh_Hans: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
          label:
            en_US: Operation Type
            ja_JP: Operation Type
            pt_BR: Operation Type
            zh_Hans: Operation Type
          llm_description: Choose whether to create, read, update, delete, or relate
            nodes.
          max: null
          min: null
          name: operation
          options:
          - label:
              en_US: Visualize Graph
              ja_JP: Visualize Graph
              pt_BR: Visualize Graph
              zh_Hans: Visualize Graph
            value: visualize_graph
          - label:
              en_US: Create Node
              ja_JP: Create Node
              pt_BR: Create Node
              zh_Hans: Create Node
            value: create
          - label:
              en_US: Read Data
              ja_JP: Read Data
              pt_BR: Read Data
              zh_Hans: Read Data
            value: read
          - label:
              en_US: Update Node
              ja_JP: Update Node
              pt_BR: Update Node
              zh_Hans: Update Node
            value: update
          - label:
              en_US: Delete Node
              ja_JP: Delete Node
              pt_BR: Delete Node
              zh_Hans: Delete Node
            value: delete
          - label:
              en_US: Delete All Node
              ja_JP: Delete All Node
              pt_BR: Delete All Node
              zh_Hans: Delete All Node
            value: delete_all
          - label:
              en_US: Create Relationship
              ja_JP: Create Relationship
              pt_BR: Create Relationship
              zh_Hans: Create Relationship
            value: create_relationship
          - label:
              en_US: Create Nodes with Relationship
              ja_JP: Create Nodes with Relationship
              pt_BR: Create Nodes with Relationship
              zh_Hans: Create Nodes with Relationship
            value: createNodesWithRelationship
          - label:
              en_US: Update Relationship
              ja_JP: Update Relationship
              pt_BR: Update Relationship
              zh_Hans: Update Relationship
            value: update_relationship
          - label:
              en_US: Delete Relationship
              ja_JP: Delete Relationship
              pt_BR: Delete Relationship
              zh_Hans: Delete Relationship
            value: delete_relationship
          - label:
              en_US: Delete Relationship Between Nodes
              ja_JP: Delete Relationship Between Nodes
              pt_BR: Delete Relationship Between Nodes
              zh_Hans: Delete Relationship Between Nodes
            value: delete_relationship_between_nodes
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the node to perform operations on.
            ja_JP: The label of the node to perform operations on.
            pt_BR: The label of the node to perform operations on.
            zh_Hans: The label of the node to perform operations on.
          label:
            en_US: Node Label (start node)
            ja_JP: Node Label (start node)
            pt_BR: Node Label (start node)
            zh_Hans: Node Label (start node)
          llm_description: The label of the node to perform operations on.
          max: null
          min: null
          name: node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for node properties.
            ja_JP: Key-value pairs for node properties.
            pt_BR: Key-value pairs for node properties.
            zh_Hans: Key-value pairs for node properties.
          label:
            en_US: Properties (JSON)
            ja_JP: Properties (JSON)
            pt_BR: Properties (JSON)
            zh_Hans: Properties (JSON)
          llm_description: JSON object with key-value pairs for properties.
          max: null
          min: null
          name: properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the end node to perform operations on.
            ja_JP: The label of the end node to perform operations on.
            pt_BR: The label of the end node to perform operations on.
            zh_Hans: The label of the end node to perform operations on.
          label:
            en_US: End Node Label
            ja_JP: End Node Label
            pt_BR: End Node Label
            zh_Hans: End Node Label
          llm_description: The label of the end node to perform operations on.
          max: null
          min: null
          name: end_node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for end node properties.
            ja_JP: Key-value pairs for end node properties.
            pt_BR: Key-value pairs for end node properties.
            zh_Hans: Key-value pairs for end node properties.
          label:
            en_US: End Node Properties (JSON)
            ja_JP: End Node Properties (JSON)
            pt_BR: End Node Properties (JSON)
            zh_Hans: End Node Properties (JSON)
          llm_description: JSON object with key-value pairs for end node properties.
          max: null
          min: null
          name: end_node_properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The type of relationship to create.
            ja_JP: The type of relationship to create.
            pt_BR: The type of relationship to create.
            zh_Hans: The type of relationship to create.
          label:
            en_US: Relationship Type
            ja_JP: Relationship Type
            pt_BR: Relationship Type
            zh_Hans: Relationship Type
          llm_description: The type of relationship to create.
          max: null
          min: null
          name: relationship_type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for updating node properties or a string for updating
              relationship.
            ja_JP: Key-value pairs for updating node properties or a string for updating
              relationship.
            pt_BR: Key-value pairs for updating node properties or a string for updating
              relationship.
            zh_Hans: Key-value pairs for updating node properties or a string for
              updating relationship.
          label:
            en_US: Update Properties (JSON) or Relationship (str)
            ja_JP: Update Properties (JSON) or Relationship (str)
            pt_BR: Update Properties (JSON) or Relationship (str)
            zh_Hans: Update Properties (JSON) or Relationship (str)
          llm_description: JSON object with key-value pairs used to update properties
            or a string for updating relationship. .
          max: null
          min: null
          name: update_parameter
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: A custom Cypher query to be executed directly.
            ja_JP: A custom Cypher query to be executed directly.
            pt_BR: A custom Cypher query to be executed directly.
            zh_Hans: A custom Cypher query to be executed directly.
          label:
            en_US: Custom Query (for advanced users)
            ja_JP: Custom Query (for advanced users)
            pt_BR: Custom Query (for advanced users)
            zh_Hans: Custom Query (for advanced users)
          llm_description: A custom Cypher query to be executed directly.
          max: null
          min: null
          name: query
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        params:
          end_node_label: ''
          end_node_properties: ''
          node_label: ''
          operation: ''
          properties: ''
          query: ''
          relationship_type: ''
          update_parameter: ''
        provider_id: jerry_aa/neo4j/neo4j
        provider_name: jerry_aa/neo4j/neo4j
        provider_type: builtin
        selected: false
        title: Concepts Info
        tool_configurations: {}
        tool_label: neo4j
        tool_name: neo4j
        tool_parameters:
          node_label:
            type: mixed
            value: ''
          operation:
            type: constant
            value: read
          properties:
            type: mixed
            value: ''
          query:
            type: mixed
            value: "MATCH (p:Research_Paper {title: \"{{#1740502452418.Title#}}\"\
              })-[:CATEGORIZED_UNDER]->(c:Concept)\nWITH COUNT(DISTINCT c) AS Total_Concepts,\
              \ \n     collect({name: c.name}) AS Concepts\nRETURN Total_Concepts,\
              \ Concepts"
        type: tool
      height: 54
      id: '17417114843540'
      position:
        x: 5639.28476944631
        y: 1723.632147400002
      positionAbsolute:
        x: 5639.28476944631
        y: 1723.632147400002
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json\n\ndef extract_author_id(author_url):\n    \"\"\"Extracts\
          \ only the ID from an OpenAlex author URL.\"\"\"\n    if author_url and\
          \ isinstance(author_url, str):\n        return author_url.split(\"/\")[-1]\
          \  # Get last part after '/'\n    return \"\"\n\ndef extract_correct_paper(api_response,\
          \ original_title):\n    \n    \n\n    # Check if the response contains results\n\
          \    if \"results\" not in api_response or not api_response[\"results\"\
          ]:\n        return {}\n\n    # Normalize the original title for case-insensitive\
          \ comparison\n    normalized_title = original_title.strip().lower()\n\n\
          \    # List to store matched papers\n    matched_papers = []\n\n    # Loop\
          \ through results to find the exact title match\n    for paper in api_response[\"\
          results\"]:\n        if \"title\" in paper and paper[\"title\"].strip().lower()\
          \ == normalized_title:\n            matched_papers.append(paper)\n\n   \
          \ # If multiple matches exist, choose the one with the highest relevance_score\n\
          \    if matched_papers:\n        best_match = max(matched_papers, key=lambda\
          \ x: x.get(\"relevance_score\", 0))\n        return  best_match\n\n    #\
          \ If no exact match is found, return an empty dictionary\n    return {}\n\
          \n\ndef extract_graph_metadata(paper_metadata, summary:str):\n    \"\"\"\
          \n    Extracts necessary properties for Research_Paper, Source, Concept\
          \ Nodes, and Topic Nodes.\n\n    :param paper_metadata: Dictionary containing\
          \ paper details\n    :return: Dictionary with extracted metadata\n    \"\
          \"\"\n    # Extract Research Paper details\n    research_paper = {\n   \
          \     \"title\": paper_metadata.get(\"title\", \"\"),\n        \"id\": paper_metadata.get(\"\
          id\", \"\"),\n        \"doi\": paper_metadata.get(\"doi\", \"\"),\n    \
          \    \"publication_year\": paper_metadata.get(\"publication_year\", \"\"\
          ),\n        \"publication_date\": paper_metadata.get(\"publication_date\"\
          , \"\"),\n        \"language\": paper_metadata.get(\"language\", \"\"),\n\
          \        \"open_access_status\": paper_metadata.get(\"open_access\", {}).get(\"\
          oa_status\", \"\"),\n        \"cited_by_count\": paper_metadata.get(\"cited_by_count\"\
          , 0),\n        \"authors\": \", \".join([author[\"author\"][\"display_name\"\
          ] for author in paper_metadata.get(\"authorships\", []) if \"author\" in\
          \ author]),\n        \"summary\": summary\n    }\n\n    # Extract Source\
          \ details\n    primary_location = paper_metadata.get(\"primary_location\"\
          , {})\n    source = primary_location.get(\"source\", {})\n    source_node\
          \ = {\n        \"name\": source.get(\"display_name\", \"\"),\n        \"\
          id\": source.get(\"id\", \"\"),\n        \"type\": source.get(\"type\",\
          \ \"\"),\n        \"is_oa\": source.get(\"is_oa\", False),\n        \"host_organization\"\
          : source.get(\"host_organization_name\", \"\"),\n        \"landing_page_url\"\
          : primary_location.get(\"landing_page_url\", \"\")\n    }\n\n    # Extract\
          \ Concepts\n    concepts = [\n        {\n            \"name\": concept.get(\"\
          display_name\", \"\"),\n            \"id\": concept.get(\"id\", \"\"),\n\
          \            \"wikidata\": concept.get(\"wikidata\", \"\"),\n          \
          \  \"level\": concept.get(\"level\", \"\"),\n            \"score\": concept.get(\"\
          score\", 0.0)\n        }\n        for concept in paper_metadata.get(\"concepts\"\
          , [])\n    ]\n\n    # Extract Topics\n    topics = [\n        {\n      \
          \      \"name\": topic.get(\"display_name\", \"\"),\n            \"id\"\
          : topic.get(\"id\", \"\"),\n            \"subfield\": topic.get(\"subfield\"\
          , {}).get(\"display_name\", \"\"),\n            \"field\": topic.get(\"\
          field\", {}).get(\"display_name\", \"\"),\n            \"domain\": topic.get(\"\
          domain\", {}).get(\"display_name\", \"\"),\n            \"score\": topic.get(\"\
          score\", 0.0)\n        }\n        for topic in paper_metadata.get(\"topics\"\
          , [])\n    ]\n    # Extract author IDs\n    author_ids = [\n        extract_author_id(author_entry[\"\
          author\"][\"id\"])\n        for author_entry in paper_metadata.get(\"authorships\"\
          , []) \n        if isinstance(author_entry, dict) and isinstance(author_entry.get(\"\
          author\"), dict) and author_entry[\"author\"].get(\"id\")\n    ]\n\n   \
          \ return {\n        \"Research_Paper\": str(research_paper),\n        \"\
          Source\": str(source_node),\n        \"Concepts\": concepts,\n        \"\
          Topics\": topics,\n        \"Author_IDs\": author_ids\n    }\n\ndef main(api_response:\
          \ dict, original_title:str, summary:str) -> dict:\n    filtered_metadata\
          \ = extract_correct_paper(api_response[0], original_title)\n    paper =\
          \ {}\n    if filtered_metadata or filtered_metadata != {}:\n        paper\
          \ = extract_graph_metadata(filtered_metadata, summary)\n    return paper"
        code_language: python3
        desc: Used to extract the meta date of the reference Paper
        isInIteration: true
        iteration_id: '1740526532426'
        outputs:
          Author_IDs:
            children: null
            type: array[string]
          Concepts:
            children: null
            type: array[object]
          Research_Paper:
            children: null
            type: string
          Source:
            children: null
            type: string
          Topics:
            children: null
            type: array[object]
        selected: false
        title: Extract Research Paper
        type: code
        variables:
        - value_selector:
          - '1741701423063'
          - json
          variable: api_response
        - value_selector:
          - '1740502452418'
          - Title
          variable: original_title
        - value_selector:
          - '1741375583243'
          - text
          variable: summary
      height: 98
      id: '17417182251300'
      position:
        x: 3063.252123512807
        y: 976.4788208696315
      positionAbsolute:
        x: 3063.252123512807
        y: 976.4788208696315
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: create relationship between Paper and Reference Paper
        isInIteration: true
        isInLoop: false
        is_team_authorization: true
        iteration_id: '1740526532426'
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            ja_JP: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            pt_BR: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            zh_Hans: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
          label:
            en_US: Operation Type
            ja_JP: Operation Type
            pt_BR: Operation Type
            zh_Hans: Operation Type
          llm_description: Choose whether to create, read, update, delete, or relate
            nodes.
          max: null
          min: null
          name: operation
          options:
          - label:
              en_US: Visualize Graph
              ja_JP: Visualize Graph
              pt_BR: Visualize Graph
              zh_Hans: Visualize Graph
            value: visualize_graph
          - label:
              en_US: Create Node
              ja_JP: Create Node
              pt_BR: Create Node
              zh_Hans: Create Node
            value: create
          - label:
              en_US: Read Data
              ja_JP: Read Data
              pt_BR: Read Data
              zh_Hans: Read Data
            value: read
          - label:
              en_US: Update Node
              ja_JP: Update Node
              pt_BR: Update Node
              zh_Hans: Update Node
            value: update
          - label:
              en_US: Delete Node
              ja_JP: Delete Node
              pt_BR: Delete Node
              zh_Hans: Delete Node
            value: delete
          - label:
              en_US: Delete All Node
              ja_JP: Delete All Node
              pt_BR: Delete All Node
              zh_Hans: Delete All Node
            value: delete_all
          - label:
              en_US: Create Relationship
              ja_JP: Create Relationship
              pt_BR: Create Relationship
              zh_Hans: Create Relationship
            value: create_relationship
          - label:
              en_US: Create Nodes with Relationship
              ja_JP: Create Nodes with Relationship
              pt_BR: Create Nodes with Relationship
              zh_Hans: Create Nodes with Relationship
            value: createNodesWithRelationship
          - label:
              en_US: Update Relationship
              ja_JP: Update Relationship
              pt_BR: Update Relationship
              zh_Hans: Update Relationship
            value: update_relationship
          - label:
              en_US: Delete Relationship
              ja_JP: Delete Relationship
              pt_BR: Delete Relationship
              zh_Hans: Delete Relationship
            value: delete_relationship
          - label:
              en_US: Delete Relationship Between Nodes
              ja_JP: Delete Relationship Between Nodes
              pt_BR: Delete Relationship Between Nodes
              zh_Hans: Delete Relationship Between Nodes
            value: delete_relationship_between_nodes
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the node to perform operations on.
            ja_JP: The label of the node to perform operations on.
            pt_BR: The label of the node to perform operations on.
            zh_Hans: The label of the node to perform operations on.
          label:
            en_US: Node Label (start node)
            ja_JP: Node Label (start node)
            pt_BR: Node Label (start node)
            zh_Hans: Node Label (start node)
          llm_description: The label of the node to perform operations on.
          max: null
          min: null
          name: node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for node properties.
            ja_JP: Key-value pairs for node properties.
            pt_BR: Key-value pairs for node properties.
            zh_Hans: Key-value pairs for node properties.
          label:
            en_US: Properties (JSON)
            ja_JP: Properties (JSON)
            pt_BR: Properties (JSON)
            zh_Hans: Properties (JSON)
          llm_description: JSON object with key-value pairs for properties.
          max: null
          min: null
          name: properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the end node to perform operations on.
            ja_JP: The label of the end node to perform operations on.
            pt_BR: The label of the end node to perform operations on.
            zh_Hans: The label of the end node to perform operations on.
          label:
            en_US: End Node Label
            ja_JP: End Node Label
            pt_BR: End Node Label
            zh_Hans: End Node Label
          llm_description: The label of the end node to perform operations on.
          max: null
          min: null
          name: end_node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for end node properties.
            ja_JP: Key-value pairs for end node properties.
            pt_BR: Key-value pairs for end node properties.
            zh_Hans: Key-value pairs for end node properties.
          label:
            en_US: End Node Properties (JSON)
            ja_JP: End Node Properties (JSON)
            pt_BR: End Node Properties (JSON)
            zh_Hans: End Node Properties (JSON)
          llm_description: JSON object with key-value pairs for end node properties.
          max: null
          min: null
          name: end_node_properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The type of relationship to create.
            ja_JP: The type of relationship to create.
            pt_BR: The type of relationship to create.
            zh_Hans: The type of relationship to create.
          label:
            en_US: Relationship Type
            ja_JP: Relationship Type
            pt_BR: Relationship Type
            zh_Hans: Relationship Type
          llm_description: The type of relationship to create.
          max: null
          min: null
          name: relationship_type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for updating node properties or a string for updating
              relationship.
            ja_JP: Key-value pairs for updating node properties or a string for updating
              relationship.
            pt_BR: Key-value pairs for updating node properties or a string for updating
              relationship.
            zh_Hans: Key-value pairs for updating node properties or a string for
              updating relationship.
          label:
            en_US: Update Properties (JSON) or Relationship (str)
            ja_JP: Update Properties (JSON) or Relationship (str)
            pt_BR: Update Properties (JSON) or Relationship (str)
            zh_Hans: Update Properties (JSON) or Relationship (str)
          llm_description: JSON object with key-value pairs used to update properties
            or a string for updating relationship. .
          max: null
          min: null
          name: update_parameter
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: A custom Cypher query to be executed directly.
            ja_JP: A custom Cypher query to be executed directly.
            pt_BR: A custom Cypher query to be executed directly.
            zh_Hans: A custom Cypher query to be executed directly.
          label:
            en_US: Custom Query (for advanced users)
            ja_JP: Custom Query (for advanced users)
            pt_BR: Custom Query (for advanced users)
            zh_Hans: Custom Query (for advanced users)
          llm_description: A custom Cypher query to be executed directly.
          max: null
          min: null
          name: query
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        params:
          end_node_label: ''
          end_node_properties: ''
          node_label: ''
          operation: ''
          properties: ''
          query: ''
          relationship_type: ''
          update_parameter: ''
        provider_id: jerry_aa/neo4j/neo4j
        provider_name: jerry_aa/neo4j/neo4j
        provider_type: builtin
        selected: false
        title: Paper & Reference Paper
        tool_configurations: {}
        tool_label: neo4j
        tool_name: neo4j
        tool_parameters:
          end_node_label:
            type: mixed
            value: Reference_Paper
          end_node_properties:
            type: mixed
            value: '{{#1741682372317.Reference_Paper#}}'
          node_label:
            type: mixed
            value: Research_Paper
          operation:
            type: constant
            value: createNodesWithRelationship
          properties:
            type: mixed
            value: '{{#17417182251300.Research_Paper#}}'
          relationship_type:
            type: mixed
            value: CITED
        type: tool
      height: 98
      id: '1741720538127'
      parentId: '1740526532426'
      position:
        x: 1232.6758250001913
        y: 108.84002651081278
      positionAbsolute:
        x: 3127.8399943053137
        y: 1517.8301429464477
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
      zIndex: 1002
    - data:
        desc: ''
        selected: false
        template: "# Converstion history\r\n\r\n{{ chat_history }}\r\n\r\n\r\n# user\
          \ Input\r\n\r\n{{ Query }}"
        title: Template 6
        type: template-transform
        variables:
        - value_selector:
          - '1740085577359'
          - ChatHistory
          variable: chat_history
        - value_selector:
          - '1740085577359'
          - Query
          variable: Query
      height: 54
      id: '1741781417014'
      position:
        x: 971.9449742114989
        y: 2252.505638602968
      positionAbsolute:
        x: 971.9449742114989
        y: 2252.505638602968
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        selected: false
        template: "{{ reponse }}\r\n\r\n**Cypher Query Used:**\r\n```cypher\r\n{{\
          \ query }}\r\n```\r\n"
        title: Template 7
        type: template-transform
        variables:
        - value_selector:
          - '1741782292071'
          - text
          variable: query
        - value_selector:
          - '1741383915003'
          - text
          variable: reponse
      height: 54
      id: '1741781467526'
      position:
        x: 2102.781969941585
        y: 2581.209243692956
      positionAbsolute:
        x: 2102.781969941585
        y: 2581.209243692956
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: llama3.2:latest
          provider: langgenius/ollama/ollama
        prompt_template:
        - id: 43f0c946-2954-4eeb-9a19-f0d606c52ef4
          role: system
          text: "<system_prompt>\nYOU ARE A HIGHLY SKILLED CYPHER QUERY GENERATOR\
            \ TASKED WITH CREATING **EFFICIENT, ACCURATE, AND OPTIMIZED CYPHER QUERIES**\
            \ FOR A **NEO4J DATABASE** BASED ON USER REQUESTS. YOU MUST FOLLOW THE\
            \ PROVIDED DATABASE SCHEMA AND ENSURE QUERIES ADHERE TO NEO4J BEST PRACTICES.\n\
            \n### INSTRUCTIONS ###\n\n**DELETE ALL NODES IN THE DATABASE:** - **Use\
            \ only the following query to delete all nodes and relationships:**\n\
            cypher\n     MATCH (n) DETACH DELETE n RETURN 'All nodes and relationships\
            \ deleted'\n\n1. **RETURN ONLY THE CYPHER QUERY**  \n   - Do not include\
            \ any explanations, context, optimizations, or descriptions.  \n   - Do\
            \ not add any text before or after the query.  \n   - Only return the\
            \ Cypher query itself.  \n\n2. **ENSURE CYPHER SYNTAX ACCURACY**  \n \
            \  - Use the correct Neo4j clauses: `MATCH`, `MERGE`, `CREATE`, `WHERE`,\
            \ `RETURN`, `ORDER BY`, `LIMIT`, `DETACH DELETE`, `DELETE`, etc.  \n \
            \  - Use `MERGE` instead of `CREATE` to prevent duplicate nodes and relationships.\
            \  \n   - Use `DETACH DELETE` for removing nodes and all their relationships.\
            \  \n\n3. **FOLLOW DATABASE SCHEMA**  \n   - **Nodes and Their Properties:**\
            \  \n     - **Research_Paper** (title, id, doi, publication_year, language,\
            \ cited_by_count, authors, summary, etc.).  \n     - **Source** (name,\
            \ id, type, host_organization, landing_page_url, etc.).  \n     - **Concept**\
            \ (name, id, wikidata, score, etc.).  \n     - **Topic** (name, id, subfield,\
            \ field, domain, score, etc.).  \n     - **Author** (name, id, works_count,\
            \ cited_by_count, affiliations, etc.).  \n     - **Reference_Paper** (title,\
            \ id, doi, publication_year, language, cited_by_count, authors, summary,\
            \ etc.).  \n\n   - **Relationships:**  \n     - `(Research_Paper)-[:WRITTEN_BY]->(Author)`\
            \  \n     - `(Research_Paper)-[:CATEGORIZED_UNDER]->(Concept)`  \n   \
            \  - `(Research_Paper)-[:BELONGS_TO]->(Topic)`  \n     - `(Research_Paper)-[:PUBLISHED_IN]->(Source)`\
            \  \n     - `(Research_Paper)-[:CITED]->(Reference_Paper)`  \n\n4. **GENERATE\
            \ QUERIES FOR COMMON OPERATIONS**  \n   - **CREATE NEW ENTRIES:**  \n\
            \     - Ensure `MERGE` is used to prevent duplicates.  \n   - **SEARCH\
            \ DATA:**  \n     - Use `MATCH` and `WHERE` to filter nodes efficiently.\
            \  \n   - **UPDATE DATA:**  \n     - Use `SET` to modify existing properties.\
            \  \n   - **DELETE DATA:**  \n     - Use `DETACH DELETE` to remove nodes\
            \ safely.  \n\n5. **ENSURE QUERY OPTIMIZATION**  \n   - Avoid full graph\
            \ scans by using indexed fields in filters.  \n   - Structure complex\
            \ queries with `WITH` for intermediate processing.  \n   - Apply `LIMIT`\
            \ and `ORDER BY` when dealing with large datasets.  \n\n6. **EXAMPLES\
            \ OF EXPECTED OUTPUT**  \n\n**Correct Output (Only Cypher Query, No Explanation):**\
            \  \nMATCH (p:Research_Paper {title: \"Natural Science\"})-[:CITED]->(s:Reference_Paper)\n\
            RETURN s.name, s.id\n\n\n **Incorrect Output (Includes Explanation or\
            \ Additional Text):**  \n_\"To find the publication information of a specific\
            \ research paper, we can use the MATCH clause to query for the Source\
            \ node that is connected to the Research_Paper node. Here's an example\
            \ Cypher query:\"_  \n\n```cypher\nMATCH (p:Research_Paper {title: \"\
            Natural Science\"})-[:PUBLISHED_IN]->(s:Source)\nRETURN s.name, s.id\n\
            ```\n\n_\"This query will return the name and ID of the source where the\
            \ paper with title 'Attention Is All You Need' was published.\"_  \n\n\
            **DO NOT INCLUDE ANYTHING EXCEPT THE CYPHER QUERY.**  \n\n### WHAT NOT\
            \ TO DO ###\n- **DO NOT** generate explanations, optimizations, or query\
            \ descriptions.  \n- **DO NOT** include text before or after the query.\
            \  \n- **DO NOT** assume missing details—ask the user for clarification\
            \ instead.  \n\n</system_prompt>"
        - id: 687cea97-fce4-4d3e-88d0-034b81b60727
          role: user
          text: '{{#1741781417014.output#}}'
        selected: false
        title: LLM 6
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: '1741782292071'
      position:
        x: 979.8642521868296
        y: 2341.8803768285557
      positionAbsolute:
        x: 979.8642521868296
        y: 2341.8803768285557
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: This is used to generate cyper query for neo4j based on the user input
        instruction: 'you will be provided With a text containing cypher query for
          a database your job it to extract the cyper query

          Output format:'
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: llama3.2:latest
          provider: langgenius/ollama/ollama
        parameters:
        - description: The query to the Neo4j database
          name: query
          required: true
          type: string
        query:
        - '1741782292071'
        - text
        reasoning_mode: prompt
        selected: false
        title: Cyper Query Extractor (1)
        type: parameter-extractor
        variables: []
        vision:
          enabled: false
      height: 134
      id: '17417834616980'
      position:
        x: 1424.9490168478112
        y: 2520.333519788512
      positionAbsolute:
        x: 1424.9490168478112
        y: 2520.333519788512
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: A Tool used to communicate with neo4J
        is_team_authorization: true
        output_schema: null
        paramSchemas:
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            ja_JP: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            pt_BR: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
            zh_Hans: Select the type of operation to perform (Create, Read, Update,
              Delete, or Relate).
          label:
            en_US: Operation Type
            ja_JP: Operation Type
            pt_BR: Operation Type
            zh_Hans: Operation Type
          llm_description: Choose whether to create, read, update, delete, or relate
            nodes.
          max: null
          min: null
          name: operation
          options:
          - label:
              en_US: Visualize Graph
              ja_JP: Visualize Graph
              pt_BR: Visualize Graph
              zh_Hans: Visualize Graph
            value: visualize_graph
          - label:
              en_US: Create Node
              ja_JP: Create Node
              pt_BR: Create Node
              zh_Hans: Create Node
            value: create
          - label:
              en_US: Read Data
              ja_JP: Read Data
              pt_BR: Read Data
              zh_Hans: Read Data
            value: read
          - label:
              en_US: Update Node
              ja_JP: Update Node
              pt_BR: Update Node
              zh_Hans: Update Node
            value: update
          - label:
              en_US: Delete Node
              ja_JP: Delete Node
              pt_BR: Delete Node
              zh_Hans: Delete Node
            value: delete
          - label:
              en_US: Delete All Node
              ja_JP: Delete All Node
              pt_BR: Delete All Node
              zh_Hans: Delete All Node
            value: delete_all
          - label:
              en_US: Create Relationship
              ja_JP: Create Relationship
              pt_BR: Create Relationship
              zh_Hans: Create Relationship
            value: create_relationship
          - label:
              en_US: Create Nodes with Relationship
              ja_JP: Create Nodes with Relationship
              pt_BR: Create Nodes with Relationship
              zh_Hans: Create Nodes with Relationship
            value: createNodesWithRelationship
          - label:
              en_US: Update Relationship
              ja_JP: Update Relationship
              pt_BR: Update Relationship
              zh_Hans: Update Relationship
            value: update_relationship
          - label:
              en_US: Delete Relationship
              ja_JP: Delete Relationship
              pt_BR: Delete Relationship
              zh_Hans: Delete Relationship
            value: delete_relationship
          - label:
              en_US: Delete Relationship Between Nodes
              ja_JP: Delete Relationship Between Nodes
              pt_BR: Delete Relationship Between Nodes
              zh_Hans: Delete Relationship Between Nodes
            value: delete_relationship_between_nodes
          placeholder: null
          precision: null
          required: true
          scope: null
          template: null
          type: select
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the node to perform operations on.
            ja_JP: The label of the node to perform operations on.
            pt_BR: The label of the node to perform operations on.
            zh_Hans: The label of the node to perform operations on.
          label:
            en_US: Node Label (start node)
            ja_JP: Node Label (start node)
            pt_BR: Node Label (start node)
            zh_Hans: Node Label (start node)
          llm_description: The label of the node to perform operations on.
          max: null
          min: null
          name: node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for node properties.
            ja_JP: Key-value pairs for node properties.
            pt_BR: Key-value pairs for node properties.
            zh_Hans: Key-value pairs for node properties.
          label:
            en_US: Properties (JSON)
            ja_JP: Properties (JSON)
            pt_BR: Properties (JSON)
            zh_Hans: Properties (JSON)
          llm_description: JSON object with key-value pairs for properties.
          max: null
          min: null
          name: properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The label of the end node to perform operations on.
            ja_JP: The label of the end node to perform operations on.
            pt_BR: The label of the end node to perform operations on.
            zh_Hans: The label of the end node to perform operations on.
          label:
            en_US: End Node Label
            ja_JP: End Node Label
            pt_BR: End Node Label
            zh_Hans: End Node Label
          llm_description: The label of the end node to perform operations on.
          max: null
          min: null
          name: end_node_label
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for end node properties.
            ja_JP: Key-value pairs for end node properties.
            pt_BR: Key-value pairs for end node properties.
            zh_Hans: Key-value pairs for end node properties.
          label:
            en_US: End Node Properties (JSON)
            ja_JP: End Node Properties (JSON)
            pt_BR: End Node Properties (JSON)
            zh_Hans: End Node Properties (JSON)
          llm_description: JSON object with key-value pairs for end node properties.
          max: null
          min: null
          name: end_node_properties
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: The type of relationship to create.
            ja_JP: The type of relationship to create.
            pt_BR: The type of relationship to create.
            zh_Hans: The type of relationship to create.
          label:
            en_US: Relationship Type
            ja_JP: Relationship Type
            pt_BR: Relationship Type
            zh_Hans: Relationship Type
          llm_description: The type of relationship to create.
          max: null
          min: null
          name: relationship_type
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: '{}'
          form: llm
          human_description:
            en_US: Key-value pairs for updating node properties or a string for updating
              relationship.
            ja_JP: Key-value pairs for updating node properties or a string for updating
              relationship.
            pt_BR: Key-value pairs for updating node properties or a string for updating
              relationship.
            zh_Hans: Key-value pairs for updating node properties or a string for
              updating relationship.
          label:
            en_US: Update Properties (JSON) or Relationship (str)
            ja_JP: Update Properties (JSON) or Relationship (str)
            pt_BR: Update Properties (JSON) or Relationship (str)
            zh_Hans: Update Properties (JSON) or Relationship (str)
          llm_description: JSON object with key-value pairs used to update properties
            or a string for updating relationship. .
          max: null
          min: null
          name: update_parameter
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        - auto_generate: null
          default: null
          form: llm
          human_description:
            en_US: A custom Cypher query to be executed directly.
            ja_JP: A custom Cypher query to be executed directly.
            pt_BR: A custom Cypher query to be executed directly.
            zh_Hans: A custom Cypher query to be executed directly.
          label:
            en_US: Custom Query (for advanced users)
            ja_JP: Custom Query (for advanced users)
            pt_BR: Custom Query (for advanced users)
            zh_Hans: Custom Query (for advanced users)
          llm_description: A custom Cypher query to be executed directly.
          max: null
          min: null
          name: query
          options: []
          placeholder: null
          precision: null
          required: false
          scope: null
          template: null
          type: string
        params:
          end_node_label: ''
          end_node_properties: ''
          node_label: ''
          operation: ''
          properties: ''
          query: ''
          relationship_type: ''
          update_parameter: ''
        provider_id: jerry_aa/neo4j/neo4j
        provider_name: jerry_aa/neo4j/neo4j
        provider_type: builtin
        retry_config:
          max_retries: 3
          retry_enabled: false
          retry_interval: 1000
        selected: false
        title: neo4j (1)
        tool_configurations: {}
        tool_label: neo4j
        tool_name: neo4j
        tool_parameters:
          operation:
            type: constant
            value: read
          properties:
            type: mixed
            value: '{}'
          query:
            type: mixed
            value: '{{#17417834616980.query#}}'
          update_parameter:
            type: mixed
            value: '{}'
        type: tool
      height: 82
      id: '17417834743570'
      position:
        x: 1785.2254463301438
        y: 2555.71001909368
      positionAbsolute:
        x: 1785.2254463301438
        y: 2555.71001909368
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        author: jerryakporDify
        desc: ''
        height: 884
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":3,"mode":"normal","style":"font-size:
          16px;","text":"Information Processor","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":3,"textStyle":"font-size:
          16px;"},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"The
          Information Processor Block ensures that the metadata is correctly stored
          in the database. It begins by querying the database to retrieve the stored
          information, including ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"the
          node structure. Once the data is validated, it generates a visualization
          to represent the relationships between research entities. Finally, an LLM
          is used to generate a ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"comprehensive
          report based on the extracted and structured data, which is then presented
          to the user as a summary of the research findings.","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: blue
        title: ''
        type: ''
        width: 1855
      height: 884
      id: '1741880253455'
      position:
        x: 5041.5751207286985
        y: 1094.4514834824804
      positionAbsolute:
        x: 5041.5751207286985
        y: 1094.4514834824804
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 1855
    - data:
        author: jerryakporDify
        desc: ''
        height: 1227
        selected: false
        showAuthor: true
        text: '{"root":{"children":[{"children":[{"detail":0,"format":3,"mode":"normal","style":"font-size:
          16px;","text":"Graph Builder","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":3,"textStyle":"font-size:
          16px;"},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"The
          Graph Builder Block is responsible for constructing the final knowledge
          graph by leveraging the metadata retrieved from the Information Miner Block.
          ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"It
          systematically creates nodes for Research Papers, Authors, Topics, Concepts,
          and Sources ensuring that each entity is accurately represented. ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"After
          the nodes are created, the block establishes relationships between them,
          such as authorship, categorization, and publication details. ","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""},{"children":[{"detail":0,"format":0,"mode":"normal","style":"","text":"This
          structured representation in the Neo4j knowledge graph enables seamless
          querying and visualization, providing a well-organized network of interconnected
          research elements.","type":"text","version":1}],"direction":"ltr","format":"","indent":0,"type":"paragraph","version":1,"textFormat":0,"textStyle":""}],"direction":"ltr","format":"","indent":0,"type":"root","version":1}}'
        theme: yellow
        title: ''
        type: ''
        width: 1287
      height: 1227
      id: '1741883073051'
      position:
        x: 3538.65902791055
        y: 704
      positionAbsolute:
        x: 3538.65902791055
        y: 704
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom-note
      width: 1287
    viewport:
      x: -39.43986168528352
      y: -1157.2104401740482
      zoom: 0.5601946070970873
